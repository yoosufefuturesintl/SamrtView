// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SVPQA.UIModule.PQA.TrendViewer.TrendWizardClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class TrendWizard
    {
        
        /// <summary>
        /// DefineQueryByDatae - Use 'DefineQueryByDataeParams' to pass parameters into this method.
        /// </summary>
        public void DefineQueryByDatae()
        {
            #region Variable Declarations
            WinTitleBar uITrendViewerTitleBar = this.UISmartViewProductionQWindow.UITrendViewerWindow.UITrendViewerTitleBar;
            WinMenuItem uIItemMenuItem = this.UIItemWindow.UIContextMenu.UIItemMenuItem;
            WinButton uINextButton = this.UITrendWizardWindow.UINextWindow.UINextButton;
            WinCheckBox uIStartdateCheckBox = this.UITrendWizardWindow.UIStartdateClient.UIStartdateCheckBox;
            WinRadioButton uIFromToRadioButton = this.UITrendWizardWindow.UIFromToWindow.UIFromToRadioButton;
            WinClient uIDateFromClient = this.UITrendWizardWindow.UIDateFromWindow.UIDateFromClient;
            WinCalendar uIDesktopCalendar = this.UIItemWindow1.UIItemWindow.UIDesktopCalendar;
            WinButton uIFinishButton = this.UITrendWizardWindow.UIFinishWindow.UIFinishButton;
            #endregion

            // Click 'Trend Viewer' title bar
            Mouse.Click(uITrendViewerTitleBar, new Point(477, 7));

            // Click menu item numbered 3 in 'Context' menu item
            Mouse.Click(uIItemMenuItem, new Point(20, 10));

            // Click 'Next' button
            Mouse.Click(uINextButton, new Point(34, 7));

            // Select 'Start date' check box
            uIStartdateCheckBox.Checked = this.DefineQueryByDataeParams.UIStartdateCheckBoxChecked;

            // Select 'From: To:' radio button
            uIFromToRadioButton.Selected = this.DefineQueryByDataeParams.UIFromToRadioButtonSelected;

            // Click 'dateFrom' client
            Mouse.Click(uIDateFromClient, new Point(97, 9));

            // Click 'Desktop' calendar
            Mouse.Click(uIDesktopCalendar, new Point(136, 65));

            // Click 'Next' button
            Mouse.Click(uINextButton, new Point(34, 6));

            // Click 'Next' button
            Mouse.Click(uINextButton, new Point(60, 11));

            // Click 'Finish' button
            Mouse.Click(uIFinishButton, new Point(23, 12));
        }
        
        /// <summary>
        /// DefineQueryByLastDuration - Use 'DefineQueryByLastDurationParams' to pass parameters into this method.
        /// </summary>
        public void DefineQueryByLastDuration()
        {
            #region Variable Declarations
            WinTitleBar uITrendViewerTitleBar = this.UISmartViewProductionQWindow.UITrendViewerWindow.UITrendViewerTitleBar;
            WinMenuItem uIItemMenuItem = this.UIItemWindow.UIContextMenu.UIItemMenuItem;
            WinButton uINextButton = this.UITrendWizardWindow.UINextWindow.UINextButton;
            WinCheckBox uIStartdateCheckBox = this.UITrendWizardWindow.UIStartdateClient.UIStartdateCheckBox;
            WinRadioButton uILastRadioButton = this.UITrendWizardWindow.UILastWindow.UILastRadioButton;
            WinEdit uITextLastEdit = this.UITrendWizardWindow.UITextLastWindow.UITextLastEdit;
            WinComboBox uICmbLastComboBox = this.UITrendWizardWindow.UICmbLastWindow.UICmbLastComboBox;
            WinButton uIFinishButton = this.UITrendWizardWindow.UIFinishWindow.UIFinishButton;
            #endregion

            // Click 'Trend Viewer' title bar
            Mouse.Click(uITrendViewerTitleBar, new Point(466, 7));

            // Click menu item numbered 3 in 'Context' menu item
            Mouse.Click(uIItemMenuItem, new Point(21, 11));

            // Click 'Next' button
            Mouse.Click(uINextButton, new Point(48, 12));

            // Select 'Start date' check box
            uIStartdateCheckBox.Checked = this.DefineQueryByLastDurationParams.UIStartdateCheckBoxChecked;

            // Click 'Last:' radio button
            Mouse.Click(uILastRadioButton, new Point(8, 11));

            // Type '30' in 'textLast' text box
            uITextLastEdit.Text = this.DefineQueryByLastDurationParams.UITextLastEditText;

            // Select 'days' in 'cmbLast' combo box
            uICmbLastComboBox.SelectedItem = this.DefineQueryByLastDurationParams.UICmbLastComboBoxSelectedItem;

            // Click 'Next' button
            Mouse.Click(uINextButton, new Point(60, 11));

            // Click 'Next' button
            Mouse.Click(uINextButton, new Point(43, 16));

            // Click 'Finish' button
            Mouse.Click(uIFinishButton, new Point(31, 14));
        }
        
        #region Properties
        public virtual DefineQueryByDataeParams DefineQueryByDataeParams
        {
            get
            {
                if ((this.mDefineQueryByDataeParams == null))
                {
                    this.mDefineQueryByDataeParams = new DefineQueryByDataeParams();
                }
                return this.mDefineQueryByDataeParams;
            }
        }
        
        public virtual DefineQueryByLastDurationParams DefineQueryByLastDurationParams
        {
            get
            {
                if ((this.mDefineQueryByLastDurationParams == null))
                {
                    this.mDefineQueryByLastDurationParams = new DefineQueryByLastDurationParams();
                }
                return this.mDefineQueryByLastDurationParams;
            }
        }
        
        public UISmartViewProductionQWindow UISmartViewProductionQWindow
        {
            get
            {
                if ((this.mUISmartViewProductionQWindow == null))
                {
                    this.mUISmartViewProductionQWindow = new UISmartViewProductionQWindow();
                }
                return this.mUISmartViewProductionQWindow;
            }
        }
        
        public UITrendWizardWindow UITrendWizardWindow
        {
            get
            {
                if ((this.mUITrendWizardWindow == null))
                {
                    this.mUITrendWizardWindow = new UITrendWizardWindow();
                }
                return this.mUITrendWizardWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private DefineQueryByDataeParams mDefineQueryByDataeParams;
        
        private DefineQueryByLastDurationParams mDefineQueryByLastDurationParams;
        
        private UISmartViewProductionQWindow mUISmartViewProductionQWindow;
        
        private UITrendWizardWindow mUITrendWizardWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DefineQueryByDatae'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class DefineQueryByDataeParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Start date' check box
        /// </summary>
        public bool UIStartdateCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'From: To:' radio button
        /// </summary>
        public bool UIFromToRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DefineQueryByLastDuration'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class DefineQueryByLastDurationParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Start date' check box
        /// </summary>
        public bool UIStartdateCheckBoxChecked = true;
        
        /// <summary>
        /// Type '30' in 'textLast' text box
        /// </summary>
        public string UITextLastEditText = "30";
        
        /// <summary>
        /// Select 'days' in 'cmbLast' combo box
        /// </summary>
        public string UICmbLastComboBoxSelectedItem = "days";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewProductionQWindow : WinWindow
    {
        
        public UISmartViewProductionQWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Production Quality Advisor";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("SmartView Production Quality Advisor");
            #endregion
        }
        
        #region Properties
        public UITrendViewerWindow UITrendViewerWindow
        {
            get
            {
                if ((this.mUITrendViewerWindow == null))
                {
                    this.mUITrendViewerWindow = new UITrendViewerWindow(this);
                }
                return this.mUITrendViewerWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITrendViewerWindow mUITrendViewerWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITrendViewerWindow : WinWindow
    {
        
        public UITrendViewerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "TrendingForm";
            this.WindowTitles.Add("SmartView Production Quality Advisor");
            #endregion
        }
        
        #region Properties
        public UIToolbarWindow UIToolbarWindow
        {
            get
            {
                if ((this.mUIToolbarWindow == null))
                {
                    this.mUIToolbarWindow = new UIToolbarWindow(this);
                }
                return this.mUIToolbarWindow;
            }
        }
        
        public WinTitleBar UITrendViewerTitleBar
        {
            get
            {
                if ((this.mUITrendViewerTitleBar == null))
                {
                    this.mUITrendViewerTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUITrendViewerTitleBar.WindowTitles.Add("SmartView Production Quality Advisor");
                    #endregion
                }
                return this.mUITrendViewerTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIToolbarWindow mUIToolbarWindow;
        
        private WinTitleBar mUITrendViewerTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIToolbarWindow : WinWindow
    {
        
        public UIToolbarWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "toolbar";
            this.WindowTitles.Add("SmartView Production Quality Advisor");
            #endregion
        }
        
        #region Properties
        public WinButton UITrendWizardButton
        {
            get
            {
                if ((this.mUITrendWizardButton == null))
                {
                    this.mUITrendWizardButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITrendWizardButton.SearchProperties[WinButton.PropertyNames.Name] = "Trend Wizard";
                    this.mUITrendWizardButton.WindowTitles.Add("SmartView Production Quality Advisor");
                    #endregion
                }
                return this.mUITrendWizardButton;
            }
        }
        
        public WinCheckBox UIShowLegendCheckBox
        {
            get
            {
                if ((this.mUIShowLegendCheckBox == null))
                {
                    this.mUIShowLegendCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIShowLegendCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show Legend";
                    this.mUIShowLegendCheckBox.WindowTitles.Add("SmartView Production Quality Advisor");
                    #endregion
                }
                return this.mUIShowLegendCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITrendWizardButton;
        
        private WinCheckBox mUIShowLegendCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITrendWizardWindow : WinWindow
    {
        
        public UITrendWizardWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Trend Wizard";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public UIBarplotWindow UIBarplotWindow
        {
            get
            {
                if ((this.mUIBarplotWindow == null))
                {
                    this.mUIBarplotWindow = new UIBarplotWindow(this);
                }
                return this.mUIBarplotWindow;
            }
        }
        
        public UITrendWizardTitleBar UITrendWizardTitleBar
        {
            get
            {
                if ((this.mUITrendWizardTitleBar == null))
                {
                    this.mUITrendWizardTitleBar = new UITrendWizardTitleBar(this);
                }
                return this.mUITrendWizardTitleBar;
            }
        }
        
        public UIFinishWindow UIFinishWindow
        {
            get
            {
                if ((this.mUIFinishWindow == null))
                {
                    this.mUIFinishWindow = new UIFinishWindow(this);
                }
                return this.mUIFinishWindow;
            }
        }
        
        public UINextWindow UINextWindow
        {
            get
            {
                if ((this.mUINextWindow == null))
                {
                    this.mUINextWindow = new UINextWindow(this);
                }
                return this.mUINextWindow;
            }
        }
        
        public UIRecipeClient UIRecipeClient
        {
            get
            {
                if ((this.mUIRecipeClient == null))
                {
                    this.mUIRecipeClient = new UIRecipeClient(this);
                }
                return this.mUIRecipeClient;
            }
        }
        
        public UIListRecipeWindow UIListRecipeWindow
        {
            get
            {
                if ((this.mUIListRecipeWindow == null))
                {
                    this.mUIListRecipeWindow = new UIListRecipeWindow(this);
                }
                return this.mUIListRecipeWindow;
            }
        }
        
        public UIInspectionClient UIInspectionClient
        {
            get
            {
                if ((this.mUIInspectionClient == null))
                {
                    this.mUIInspectionClient = new UIInspectionClient(this);
                }
                return this.mUIInspectionClient;
            }
        }
        
        public UITextNameWindow UITextNameWindow
        {
            get
            {
                if ((this.mUITextNameWindow == null))
                {
                    this.mUITextNameWindow = new UITextNameWindow(this);
                }
                return this.mUITextNameWindow;
            }
        }
        
        public UIStartdateClient UIStartdateClient
        {
            get
            {
                if ((this.mUIStartdateClient == null))
                {
                    this.mUIStartdateClient = new UIStartdateClient(this);
                }
                return this.mUIStartdateClient;
            }
        }
        
        public UIFromToWindow UIFromToWindow
        {
            get
            {
                if ((this.mUIFromToWindow == null))
                {
                    this.mUIFromToWindow = new UIFromToWindow(this);
                }
                return this.mUIFromToWindow;
            }
        }
        
        public UIDateFromWindow UIDateFromWindow
        {
            get
            {
                if ((this.mUIDateFromWindow == null))
                {
                    this.mUIDateFromWindow = new UIDateFromWindow(this);
                }
                return this.mUIDateFromWindow;
            }
        }
        
        public UILastWindow UILastWindow
        {
            get
            {
                if ((this.mUILastWindow == null))
                {
                    this.mUILastWindow = new UILastWindow(this);
                }
                return this.mUILastWindow;
            }
        }
        
        public UITextLastWindow UITextLastWindow
        {
            get
            {
                if ((this.mUITextLastWindow == null))
                {
                    this.mUITextLastWindow = new UITextLastWindow(this);
                }
                return this.mUITextLastWindow;
            }
        }
        
        public UICmbLastWindow UICmbLastWindow
        {
            get
            {
                if ((this.mUICmbLastWindow == null))
                {
                    this.mUICmbLastWindow = new UICmbLastWindow(this);
                }
                return this.mUICmbLastWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIBarplotWindow mUIBarplotWindow;
        
        private UITrendWizardTitleBar mUITrendWizardTitleBar;
        
        private UIFinishWindow mUIFinishWindow;
        
        private UINextWindow mUINextWindow;
        
        private UIRecipeClient mUIRecipeClient;
        
        private UIListRecipeWindow mUIListRecipeWindow;
        
        private UIInspectionClient mUIInspectionClient;
        
        private UITextNameWindow mUITextNameWindow;
        
        private UIStartdateClient mUIStartdateClient;
        
        private UIFromToWindow mUIFromToWindow;
        
        private UIDateFromWindow mUIDateFromWindow;
        
        private UILastWindow mUILastWindow;
        
        private UITextLastWindow mUITextLastWindow;
        
        private UICmbLastWindow mUICmbLastWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBarplotWindow : WinWindow
    {
        
        public UIBarplotWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnPlotTypeBar";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIBarplotRadioButton
        {
            get
            {
                if ((this.mUIBarplotRadioButton == null))
                {
                    this.mUIBarplotRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIBarplotRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Bar plot";
                    this.mUIBarplotRadioButton.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUIBarplotRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIBarplotRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITrendWizardTitleBar : WinTitleBar
    {
        
        public UITrendWizardTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFinishWindow : WinWindow
    {
        
        public UIFinishWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFinish";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinButton UIFinishButton
        {
            get
            {
                if ((this.mUIFinishButton == null))
                {
                    this.mUIFinishButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFinishButton.SearchProperties[WinButton.PropertyNames.Name] = "Finish";
                    this.mUIFinishButton.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUIFinishButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIFinishButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UINextWindow : WinWindow
    {
        
        public UINextWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnNext";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinButton UINextButton
        {
            get
            {
                if ((this.mUINextButton == null))
                {
                    this.mUINextButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINextButton.SearchProperties[WinButton.PropertyNames.Name] = "Next";
                    this.mUINextButton.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUINextButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINextButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRecipeClient : WinClient
    {
        
        public UIRecipeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Recipe";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIRecipeCheckBox
        {
            get
            {
                if ((this.mUIRecipeCheckBox == null))
                {
                    this.mUIRecipeCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIRecipeCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Recipe";
                    this.mUIRecipeCheckBox.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUIRecipeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIRecipeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIListRecipeWindow : WinWindow
    {
        
        public UIListRecipeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "listRecipe";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinList UIListRecipeList
        {
            get
            {
                if ((this.mUIListRecipeList == null))
                {
                    this.mUIListRecipeList = new WinList(this);
                    #region Search Criteria
                    this.mUIListRecipeList.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUIListRecipeList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIListRecipeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIInspectionClient : WinClient
    {
        
        public UIInspectionClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Inspection";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIInspectionCheckBox
        {
            get
            {
                if ((this.mUIInspectionCheckBox == null))
                {
                    this.mUIInspectionCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIInspectionCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Inspection";
                    this.mUIInspectionCheckBox.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUIInspectionCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIInspectionCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITextNameWindow : WinWindow
    {
        
        public UITextNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textName";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextNameEdit
        {
            get
            {
                if ((this.mUITextNameEdit == null))
                {
                    this.mUITextNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextNameEdit.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUITextNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIStartdateClient : WinClient
    {
        
        public UIStartdateClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Start date";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIStartdateCheckBox
        {
            get
            {
                if ((this.mUIStartdateCheckBox == null))
                {
                    this.mUIStartdateCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIStartdateCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Start date";
                    this.mUIStartdateCheckBox.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUIStartdateCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIStartdateCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFromToWindow : WinWindow
    {
        
        public UIFromToWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radioDate";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIFromToRadioButton
        {
            get
            {
                if ((this.mUIFromToRadioButton == null))
                {
                    this.mUIFromToRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIFromToRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "From:To:";
                    this.mUIFromToRadioButton.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUIFromToRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIFromToRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDateFromWindow : WinWindow
    {
        
        public UIDateFromWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dateFrom";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinClient UIDateFromClient
        {
            get
            {
                if ((this.mUIDateFromClient == null))
                {
                    this.mUIDateFromClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDateFromClient.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUIDateFromClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDateFromClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILastWindow : WinWindow
    {
        
        public UILastWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radioLast";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UILastRadioButton
        {
            get
            {
                if ((this.mUILastRadioButton == null))
                {
                    this.mUILastRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUILastRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Last:";
                    this.mUILastRadioButton.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUILastRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUILastRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITextLastWindow : WinWindow
    {
        
        public UITextLastWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textLast";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextLastEdit
        {
            get
            {
                if ((this.mUITextLastEdit == null))
                {
                    this.mUITextLastEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextLastEdit.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUITextLastEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextLastEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICmbLastWindow : WinWindow
    {
        
        public UICmbLastWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbLast";
            this.WindowTitles.Add("Trend Wizard");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICmbLastComboBox
        {
            get
            {
                if ((this.mUICmbLastComboBox == null))
                {
                    this.mUICmbLastComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUICmbLastComboBox.WindowTitles.Add("Trend Wizard");
                    #endregion
                }
                return this.mUICmbLastComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICmbLastComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIItemMenuItem
        {
            get
            {
                if ((this.mUIItemMenuItem == null))
                {
                    this.mUIItemMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIItemMenuItem.SearchProperties[WinMenuItem.PropertyNames.Instance] = "3";
                    #endregion
                }
                return this.mUIItemMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIItemMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "SysMonthCal32";
            #endregion
        }
        
        #region Properties
        public WinCalendar UIDesktopCalendar
        {
            get
            {
                if ((this.mUIDesktopCalendar == null))
                {
                    this.mUIDesktopCalendar = new WinCalendar(this);
                }
                return this.mUIDesktopCalendar;
            }
        }
        #endregion
        
        #region Fields
        private WinCalendar mUIDesktopCalendar;
        #endregion
    }
}
