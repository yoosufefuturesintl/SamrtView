// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SVPQA.UIModule.PQA.Report.ReportWizardReportOptionsClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class ReportWizardReportOptions
    {
        
        #region Properties
        public UISmartViewProductionQWindow UISmartViewProductionQWindow
        {
            get
            {
                if ((this.mUISmartViewProductionQWindow == null))
                {
                    this.mUISmartViewProductionQWindow = new UISmartViewProductionQWindow();
                }
                return this.mUISmartViewProductionQWindow;
            }
        }
        
        public UILaneSummaryWindow1 UILaneSummaryWindow
        {
            get
            {
                if ((this.mUILaneSummaryWindow == null))
                {
                    this.mUILaneSummaryWindow = new UILaneSummaryWindow1();
                }
                return this.mUILaneSummaryWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISmartViewProductionQWindow mUISmartViewProductionQWindow;
        
        private UILaneSummaryWindow1 mUILaneSummaryWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewProductionQWindow : WinWindow
    {
        
        public UISmartViewProductionQWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Production Quality Advisor";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("SmartView Production Quality Advisor");
            #endregion
        }
        
        #region Properties
        public UILaneSummaryWindow UILaneSummaryWindow
        {
            get
            {
                if ((this.mUILaneSummaryWindow == null))
                {
                    this.mUILaneSummaryWindow = new UILaneSummaryWindow(this);
                }
                return this.mUILaneSummaryWindow;
            }
        }
        #endregion
        
        #region Fields
        private UILaneSummaryWindow mUILaneSummaryWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILaneSummaryWindow : WinWindow
    {
        
        public UILaneSummaryWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "PqaFormDataSelect";
            this.WindowTitles.Add("SmartView Production Quality Advisor");
            #endregion
        }
        
        #region Properties
        public UIToolBarPreviewWindow UIToolBarPreviewWindow
        {
            get
            {
                if ((this.mUIToolBarPreviewWindow == null))
                {
                    this.mUIToolBarPreviewWindow = new UIToolBarPreviewWindow(this);
                }
                return this.mUIToolBarPreviewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIToolBarPreviewWindow mUIToolBarPreviewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIToolBarPreviewWindow : WinWindow
    {
        
        public UIToolBarPreviewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "toolBarPreview";
            this.WindowTitles.Add("SmartView Production Quality Advisor");
            #endregion
        }
        
        #region Properties
        public WinButton UIWizardButton
        {
            get
            {
                if ((this.mUIWizardButton == null))
                {
                    this.mUIWizardButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIWizardButton.SearchProperties[WinButton.PropertyNames.Name] = "Wizard";
                    this.mUIWizardButton.WindowTitles.Add("SmartView Production Quality Advisor");
                    #endregion
                }
                return this.mUIWizardButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIWizardButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILaneSummaryWindow1 : WinWindow
    {
        
        public UILaneSummaryWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Lane Summary";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public UITabWindow UITabWindow
        {
            get
            {
                if ((this.mUITabWindow == null))
                {
                    this.mUITabWindow = new UITabWindow(this);
                }
                return this.mUITabWindow;
            }
        }
        
        public UIShowtableWindow UIShowtableWindow
        {
            get
            {
                if ((this.mUIShowtableWindow == null))
                {
                    this.mUIShowtableWindow = new UIShowtableWindow(this);
                }
                return this.mUIShowtableWindow;
            }
        }
        
        public UIShowgraphWindow UIShowgraphWindow
        {
            get
            {
                if ((this.mUIShowgraphWindow == null))
                {
                    this.mUIShowgraphWindow = new UIShowgraphWindow(this);
                }
                return this.mUIShowgraphWindow;
            }
        }
        
        public UIShowemptylanesWindow UIShowemptylanesWindow
        {
            get
            {
                if ((this.mUIShowemptylanesWindow == null))
                {
                    this.mUIShowemptylanesWindow = new UIShowemptylanesWindow(this);
                }
                return this.mUIShowemptylanesWindow;
            }
        }
        
        public UIShowoutofrangelanesWindow UIShowoutofrangelanesWindow
        {
            get
            {
                if ((this.mUIShowoutofrangelanesWindow == null))
                {
                    this.mUIShowoutofrangelanesWindow = new UIShowoutofrangelanesWindow(this);
                }
                return this.mUIShowoutofrangelanesWindow;
            }
        }
        
        public UIGroupbyviewWindow UIGroupbyviewWindow
        {
            get
            {
                if ((this.mUIGroupbyviewWindow == null))
                {
                    this.mUIGroupbyviewWindow = new UIGroupbyviewWindow(this);
                }
                return this.mUIGroupbyviewWindow;
            }
        }
        
        public UIComboPageWindow UIComboPageWindow
        {
            get
            {
                if ((this.mUIComboPageWindow == null))
                {
                    this.mUIComboPageWindow = new UIComboPageWindow(this);
                }
                return this.mUIComboPageWindow;
            }
        }
        
        public UIFinishWindow UIFinishWindow
        {
            get
            {
                if ((this.mUIFinishWindow == null))
                {
                    this.mUIFinishWindow = new UIFinishWindow(this);
                }
                return this.mUIFinishWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITabWindow mUITabWindow;
        
        private UIShowtableWindow mUIShowtableWindow;
        
        private UIShowgraphWindow mUIShowgraphWindow;
        
        private UIShowemptylanesWindow mUIShowemptylanesWindow;
        
        private UIShowoutofrangelanesWindow mUIShowoutofrangelanesWindow;
        
        private UIGroupbyviewWindow mUIGroupbyviewWindow;
        
        private UIComboPageWindow mUIComboPageWindow;
        
        private UIFinishWindow mUIFinishWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITabWindow : WinWindow
    {
        
        public UITabWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tab";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIReportOptionsTabPage
        {
            get
            {
                if ((this.mUIReportOptionsTabPage == null))
                {
                    this.mUIReportOptionsTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIReportOptionsTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Report Options";
                    this.mUIReportOptionsTabPage.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIReportOptionsTabPage;
            }
        }
        
        public WinTabPage UISectionFormattingTabPage
        {
            get
            {
                if ((this.mUISectionFormattingTabPage == null))
                {
                    this.mUISectionFormattingTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUISectionFormattingTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Section Formatting";
                    this.mUISectionFormattingTabPage.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUISectionFormattingTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIReportOptionsTabPage;
        
        private WinTabPage mUISectionFormattingTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIShowtableWindow : WinWindow
    {
        
        public UIShowtableWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIShowtableCheckBox
        {
            get
            {
                if ((this.mUIShowtableCheckBox == null))
                {
                    this.mUIShowtableCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIShowtableCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show table";
                    this.mUIShowtableCheckBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIShowtableCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIShowtableCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIShowgraphWindow : WinWindow
    {
        
        public UIShowgraphWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIShowgraphCheckBox
        {
            get
            {
                if ((this.mUIShowgraphCheckBox == null))
                {
                    this.mUIShowgraphCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIShowgraphCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show graph";
                    this.mUIShowgraphCheckBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIShowgraphCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIShowgraphCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIShowemptylanesWindow : WinWindow
    {
        
        public UIShowemptylanesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIShowemptylanesCheckBox
        {
            get
            {
                if ((this.mUIShowemptylanesCheckBox == null))
                {
                    this.mUIShowemptylanesCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIShowemptylanesCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show empty lanes";
                    this.mUIShowemptylanesCheckBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIShowemptylanesCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIShowemptylanesCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIShowoutofrangelanesWindow : WinWindow
    {
        
        public UIShowoutofrangelanesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIShowoutofrangelanesCheckBox
        {
            get
            {
                if ((this.mUIShowoutofrangelanesCheckBox == null))
                {
                    this.mUIShowoutofrangelanesCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIShowoutofrangelanesCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show out-of-range lanes";
                    this.mUIShowoutofrangelanesCheckBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIShowoutofrangelanesCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIShowoutofrangelanesCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIGroupbyviewWindow : WinWindow
    {
        
        public UIGroupbyviewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIGroupbyviewCheckBox
        {
            get
            {
                if ((this.mUIGroupbyviewCheckBox == null))
                {
                    this.mUIGroupbyviewCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIGroupbyviewCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Group by view";
                    this.mUIGroupbyviewCheckBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIGroupbyviewCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIGroupbyviewCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIComboPageWindow : WinWindow
    {
        
        public UIComboPageWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboPage";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIComboPageComboBox
        {
            get
            {
                if ((this.mUIComboPageComboBox == null))
                {
                    this.mUIComboPageComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIComboPageComboBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIComboPageComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIComboPageComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFinishWindow : WinWindow
    {
        
        public UIFinishWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFinish";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinButton UIFinishButton
        {
            get
            {
                if ((this.mUIFinishButton == null))
                {
                    this.mUIFinishButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFinishButton.SearchProperties[WinButton.PropertyNames.Name] = "Finish";
                    this.mUIFinishButton.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIFinishButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIFinishButton;
        #endregion
    }
}
