// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SVConfigurationManager.UIModule.ConfigurationManagerClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class ConfigurationManager
    {
        
        #region Properties
        public UISmartViewConfiguratiWindow UISmartViewConfiguratiWindow
        {
            get
            {
                if ((this.mUISmartViewConfiguratiWindow == null))
                {
                    this.mUISmartViewConfiguratiWindow = new UISmartViewConfiguratiWindow();
                }
                return this.mUISmartViewConfiguratiWindow;
            }
        }
        
        public UINewArchitectureWindow UINewArchitectureWindow
        {
            get
            {
                if ((this.mUINewArchitectureWindow == null))
                {
                    this.mUINewArchitectureWindow = new UINewArchitectureWindow();
                }
                return this.mUINewArchitectureWindow;
            }
        }
        
        public UISmartViewConfiguratiWindow1 UISmartViewConfiguratiWindow1
        {
            get
            {
                if ((this.mUISmartViewConfiguratiWindow1 == null))
                {
                    this.mUISmartViewConfiguratiWindow1 = new UISmartViewConfiguratiWindow1();
                }
                return this.mUISmartViewConfiguratiWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UISmartViewConfiguratiWindow mUISmartViewConfiguratiWindow;
        
        private UINewArchitectureWindow mUINewArchitectureWindow;
        
        private UISmartViewConfiguratiWindow1 mUISmartViewConfiguratiWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewConfiguratiWindow : WinWindow
    {
        
        public UISmartViewConfiguratiWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Configuration Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6MDIForm";
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public WinMenuBar UIApplicationMenuBar
        {
            get
            {
                if ((this.mUIApplicationMenuBar == null))
                {
                    this.mUIApplicationMenuBar = new WinMenuBar(this);
                    #region Search Criteria
                    this.mUIApplicationMenuBar.SearchProperties[WinMenu.PropertyNames.Name] = "Application";
                    this.mUIApplicationMenuBar.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUIApplicationMenuBar;
            }
        }
        
        public UICameraStatusandAssigWindow UICameraStatusandAssigWindow
        {
            get
            {
                if ((this.mUICameraStatusandAssigWindow == null))
                {
                    this.mUICameraStatusandAssigWindow = new UICameraStatusandAssigWindow(this);
                }
                return this.mUICameraStatusandAssigWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UISmartViewConfiguratiTitleBar UISmartViewConfiguratiTitleBar
        {
            get
            {
                if ((this.mUISmartViewConfiguratiTitleBar == null))
                {
                    this.mUISmartViewConfiguratiTitleBar = new UISmartViewConfiguratiTitleBar(this);
                }
                return this.mUISmartViewConfiguratiTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuBar mUIApplicationMenuBar;
        
        private UICameraStatusandAssigWindow mUICameraStatusandAssigWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UISmartViewConfiguratiTitleBar mUISmartViewConfiguratiTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICameraStatusandAssigWindow : WinWindow
    {
        
        public UICameraStatusandAssigWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32768";
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSFlexGridWndClass";
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public WinClient UICameraStatusandAssigClient
        {
            get
            {
                if ((this.mUICameraStatusandAssigClient == null))
                {
                    this.mUICameraStatusandAssigClient = new WinClient(this);
                    #region Search Criteria
                    this.mUICameraStatusandAssigClient.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUICameraStatusandAssigClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUICameraStatusandAssigClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TreeViewWndClass";
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public UIItemTree UIItemTree
        {
            get
            {
                if ((this.mUIItemTree == null))
                {
                    this.mUIItemTree = new UIItemTree(this);
                }
                return this.mUIItemTree;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTree mUIItemTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemTree : WinTree
    {
        
        public UIItemTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public UILineTreeItem UILineTreeItem
        {
            get
            {
                if ((this.mUILineTreeItem == null))
                {
                    this.mUILineTreeItem = new UILineTreeItem(this);
                }
                return this.mUILineTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UILineTreeItem mUILineTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILineTreeItem : WinTreeItem
    {
        
        public UILineTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Line";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public UIStationTreeItem UIStationTreeItem
        {
            get
            {
                if ((this.mUIStationTreeItem == null))
                {
                    this.mUIStationTreeItem = new UIStationTreeItem(this);
                }
                return this.mUIStationTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIStationTreeItem mUIStationTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIStationTreeItem : WinTreeItem
    {
        
        public UIStationTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Station";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public UIView1TreeItem UIView1TreeItem
        {
            get
            {
                if ((this.mUIView1TreeItem == null))
                {
                    this.mUIView1TreeItem = new UIView1TreeItem(this);
                }
                return this.mUIView1TreeItem;
            }
        }
        
        public WinTreeItem UIEncoderTreeItem
        {
            get
            {
                if ((this.mUIEncoderTreeItem == null))
                {
                    this.mUIEncoderTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIEncoderTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Encoder";
                    this.mUIEncoderTreeItem.SearchProperties["Value"] = "2";
                    this.mUIEncoderTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIEncoderTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIEncoderTreeItem.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUIEncoderTreeItem;
            }
        }
        
        public UIView2TreeItem UIView2TreeItem
        {
            get
            {
                if ((this.mUIView2TreeItem == null))
                {
                    this.mUIView2TreeItem = new UIView2TreeItem(this);
                }
                return this.mUIView2TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIView1TreeItem mUIView1TreeItem;
        
        private WinTreeItem mUIEncoderTreeItem;
        
        private UIView2TreeItem mUIView2TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIView1TreeItem : WinTreeItem
    {
        
        public UIView1TreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "View 1";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UICamera1cam1TreeItem
        {
            get
            {
                if ((this.mUICamera1cam1TreeItem == null))
                {
                    this.mUICamera1cam1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUICamera1cam1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Camera 1 (cam1)";
                    this.mUICamera1cam1TreeItem.SearchProperties["Value"] = "3";
                    this.mUICamera1cam1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICamera1cam1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUICamera1cam1TreeItem.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUICamera1cam1TreeItem;
            }
        }
        
        public WinTreeItem UICamera2cam2TreeItem
        {
            get
            {
                if ((this.mUICamera2cam2TreeItem == null))
                {
                    this.mUICamera2cam2TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUICamera2cam2TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Camera 2 (cam2)";
                    this.mUICamera2cam2TreeItem.SearchProperties["Value"] = "3";
                    this.mUICamera2cam2TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICamera2cam2TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUICamera2cam2TreeItem.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUICamera2cam2TreeItem;
            }
        }
        
        public WinTreeItem UICamera3cam3TreeItem
        {
            get
            {
                if ((this.mUICamera3cam3TreeItem == null))
                {
                    this.mUICamera3cam3TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUICamera3cam3TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Camera 3 (cam3)";
                    this.mUICamera3cam3TreeItem.SearchProperties["Value"] = "3";
                    this.mUICamera3cam3TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICamera3cam3TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUICamera3cam3TreeItem.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUICamera3cam3TreeItem;
            }
        }
        
        public WinTreeItem UICamera4cam4TreeItem
        {
            get
            {
                if ((this.mUICamera4cam4TreeItem == null))
                {
                    this.mUICamera4cam4TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUICamera4cam4TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Camera 4 (cam4)";
                    this.mUICamera4cam4TreeItem.SearchProperties["Value"] = "3";
                    this.mUICamera4cam4TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICamera4cam4TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUICamera4cam4TreeItem.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUICamera4cam4TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUICamera1cam1TreeItem;
        
        private WinTreeItem mUICamera2cam2TreeItem;
        
        private WinTreeItem mUICamera3cam3TreeItem;
        
        private WinTreeItem mUICamera4cam4TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIView2TreeItem : WinTreeItem
    {
        
        public UIView2TreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "View 2";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UICamera1cam2TreeItem
        {
            get
            {
                if ((this.mUICamera1cam2TreeItem == null))
                {
                    this.mUICamera1cam2TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUICamera1cam2TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Camera 1 (cam2)";
                    this.mUICamera1cam2TreeItem.SearchProperties["Value"] = "3";
                    this.mUICamera1cam2TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICamera1cam2TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUICamera1cam2TreeItem.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUICamera1cam2TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUICamera1cam2TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "3244";
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public WinClient UIWorkspaceClient
        {
            get
            {
                if ((this.mUIWorkspaceClient == null))
                {
                    this.mUIWorkspaceClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIWorkspaceClient.SearchProperties[WinControl.PropertyNames.Name] = "Workspace";
                    this.mUIWorkspaceClient.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUIWorkspaceClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIWorkspaceClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewConfiguratiTitleBar : WinTitleBar
    {
        
        public UISmartViewConfiguratiTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UINewArchitectureWindow : WinWindow
    {
        
        public UINewArchitectureWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "New Architecture";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6FormDC";
            this.WindowTitles.Add("New Architecture");
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("New Architecture");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("New Architecture");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "7";
            this.WindowTitles.Add("New Architecture");
            #endregion
        }
        
        #region Properties
        public WinGroup UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIItemGroup.WindowTitles.Add("New Architecture");
                    #endregion
                }
                return this.mUIItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TreeViewWndClass";
            this.WindowTitles.Add("New Architecture");
            #endregion
        }
        
        #region Properties
        public UIItemTree1 UIItemTree
        {
            get
            {
                if ((this.mUIItemTree == null))
                {
                    this.mUIItemTree = new UIItemTree1(this);
                }
                return this.mUIItemTree;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTree1 mUIItemTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemTree1 : WinTree
    {
        
        public UIItemTree1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("New Architecture");
            #endregion
        }
        
        #region Properties
        public UILineTreeItem1 UILineTreeItem
        {
            get
            {
                if ((this.mUILineTreeItem == null))
                {
                    this.mUILineTreeItem = new UILineTreeItem1(this);
                }
                return this.mUILineTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UILineTreeItem1 mUILineTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILineTreeItem1 : WinTreeItem
    {
        
        public UILineTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Line";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("New Architecture");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIStationTreeItem
        {
            get
            {
                if ((this.mUIStationTreeItem == null))
                {
                    this.mUIStationTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIStationTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Station";
                    this.mUIStationTreeItem.SearchProperties["Value"] = "1";
                    this.mUIStationTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIStationTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIStationTreeItem.WindowTitles.Add("New Architecture");
                    #endregion
                }
                return this.mUIStationTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIStationTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("New Architecture");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("New Architecture");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewConfiguratiWindow1 : WinWindow
    {
        
        public UISmartViewConfiguratiWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Configuration Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("SmartView Configuration Manager");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("SmartView Configuration Manager");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
