// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SmartView.UIModule.Recipe.Thresholds.ThresholdsClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class Thresholds
    {
        
        #region Properties
        public UISmartViewRecipeManagWindow UISmartViewRecipeManagWindow
        {
            get
            {
                if ((this.mUISmartViewRecipeManagWindow == null))
                {
                    this.mUISmartViewRecipeManagWindow = new UISmartViewRecipeManagWindow();
                }
                return this.mUISmartViewRecipeManagWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UISmartViewRecipeManagWindow1 UISmartViewRecipeManagWindow1
        {
            get
            {
                if ((this.mUISmartViewRecipeManagWindow1 == null))
                {
                    this.mUISmartViewRecipeManagWindow1 = new UISmartViewRecipeManagWindow1();
                }
                return this.mUISmartViewRecipeManagWindow1;
            }
        }
        
        public UIImportThresholdSettiWindow UIImportThresholdSettiWindow
        {
            get
            {
                if ((this.mUIImportThresholdSettiWindow == null))
                {
                    this.mUIImportThresholdSettiWindow = new UIImportThresholdSettiWindow();
                }
                return this.mUIImportThresholdSettiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISmartViewRecipeManagWindow mUISmartViewRecipeManagWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UISmartViewRecipeManagWindow1 mUISmartViewRecipeManagWindow1;
        
        private UIImportThresholdSettiWindow mUIImportThresholdSettiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewRecipeManagWindow : WinWindow
    {
        
        public UISmartViewRecipeManagWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Recipe Manager - test";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6MDIForm";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIThresholdsStationVieWindow UIThresholdsStationVieWindow
        {
            get
            {
                if ((this.mUIThresholdsStationVieWindow == null))
                {
                    this.mUIThresholdsStationVieWindow = new UIThresholdsStationVieWindow(this);
                }
                return this.mUIThresholdsStationVieWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIThresholdsStationVieWindow mUIThresholdsStationVieWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TreeViewWndClass";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UIItemTree UIItemTree
        {
            get
            {
                if ((this.mUIItemTree == null))
                {
                    this.mUIItemTree = new UIItemTree(this);
                }
                return this.mUIItemTree;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTree mUIItemTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemTree : WinTree
    {
        
        public UIItemTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UILineTreeItem UILineTreeItem
        {
            get
            {
                if ((this.mUILineTreeItem == null))
                {
                    this.mUILineTreeItem = new UILineTreeItem(this);
                }
                return this.mUILineTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UILineTreeItem mUILineTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILineTreeItem : WinTreeItem
    {
        
        public UILineTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Line";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UIStationTreeItem UIStationTreeItem
        {
            get
            {
                if ((this.mUIStationTreeItem == null))
                {
                    this.mUIStationTreeItem = new UIStationTreeItem(this);
                }
                return this.mUIStationTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIStationTreeItem mUIStationTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIStationTreeItem : WinTreeItem
    {
        
        public UIStationTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Station";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIView1TreeItem
        {
            get
            {
                if ((this.mUIView1TreeItem == null))
                {
                    this.mUIView1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIView1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "View 1";
                    this.mUIView1TreeItem.SearchProperties["Value"] = "2";
                    this.mUIView1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIView1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIView1TreeItem.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIView1TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIView1TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIThresholdsStationVieWindow : WinWindow
    {
        
        public UIThresholdsStationVieWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32768";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UIEnablelowerWindow UIEnablelowerWindow
        {
            get
            {
                if ((this.mUIEnablelowerWindow == null))
                {
                    this.mUIEnablelowerWindow = new UIEnablelowerWindow(this);
                }
                return this.mUIEnablelowerWindow;
            }
        }
        
        public UIItem0Window UIItem0Window
        {
            get
            {
                if ((this.mUIItem0Window == null))
                {
                    this.mUIItem0Window = new UIItem0Window(this);
                }
                return this.mUIItem0Window;
            }
        }
        
        public UIApplyWindow UIApplyWindow
        {
            get
            {
                if ((this.mUIApplyWindow == null))
                {
                    this.mUIApplyWindow = new UIApplyWindow(this);
                }
                return this.mUIApplyWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        
        public UIImportWindow UIImportWindow
        {
            get
            {
                if ((this.mUIImportWindow == null))
                {
                    this.mUIImportWindow = new UIImportWindow(this);
                }
                return this.mUIImportWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIEnablelowerWindow mUIEnablelowerWindow;
        
        private UIItem0Window mUIItem0Window;
        
        private UIApplyWindow mUIApplyWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UIImportWindow mUIImportWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEnablelowerWindow : WinWindow
    {
        
        public UIEnablelowerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "18";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIEnablelowerCheckBox
        {
            get
            {
                if ((this.mUIEnablelowerCheckBox == null))
                {
                    this.mUIEnablelowerCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIEnablelowerCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Enable lower";
                    this.mUIEnablelowerCheckBox.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIEnablelowerCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIEnablelowerCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem0Window : WinWindow
    {
        
        public UIItem0Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIApplyWindow : WinWindow
    {
        
        public UIApplyWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "60";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinButton UIApplyButton
        {
            get
            {
                if ((this.mUIApplyButton == null))
                {
                    this.mUIApplyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIApplyButton.SearchProperties[WinButton.PropertyNames.Name] = "Apply";
                    this.mUIApplyButton.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIApplyButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIApplyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "63";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIImportWindow : WinWindow
    {
        
        public UIImportWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "57";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinButton UIImportButton
        {
            get
            {
                if ((this.mUIImportButton == null))
                {
                    this.mUIImportButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIImportButton.SearchProperties[WinButton.PropertyNames.Name] = "Import...";
                    this.mUIImportButton.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIImportButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIImportButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIThresholdsMenuItem
        {
            get
            {
                if ((this.mUIThresholdsMenuItem == null))
                {
                    this.mUIThresholdsMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIThresholdsMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Thresholds...";
                    #endregion
                }
                return this.mUIThresholdsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIThresholdsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewRecipeManagWindow1 : WinWindow
    {
        
        public UISmartViewRecipeManagWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Recipe Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("SmartView Recipe Manager");
            #endregion
        }
        
        #region Properties
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("SmartView Recipe Manager");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("SmartView Recipe Manager");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIImportThresholdSettiWindow : WinWindow
    {
        
        public UIImportThresholdSettiWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Import Threshold Settings";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Import Threshold Settings");
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOpenWindow UIOpenWindow
        {
            get
            {
                if ((this.mUIOpenWindow == null))
                {
                    this.mUIOpenWindow = new UIOpenWindow(this);
                }
                return this.mUIOpenWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow;
        
        private UIOpenWindow mUIOpenWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Import Threshold Settings");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Import Threshold Settings");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOpenWindow : WinWindow
    {
        
        public UIOpenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Import Threshold Settings");
            #endregion
        }
        
        #region Properties
        public WinSplitButton UIOpenSplitButton
        {
            get
            {
                if ((this.mUIOpenSplitButton == null))
                {
                    this.mUIOpenSplitButton = new WinSplitButton(this);
                    #region Search Criteria
                    this.mUIOpenSplitButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenSplitButton.WindowTitles.Add("Import Threshold Settings");
                    #endregion
                }
                return this.mUIOpenSplitButton;
            }
        }
        #endregion
        
        #region Fields
        private WinSplitButton mUIOpenSplitButton;
        #endregion
    }
}
