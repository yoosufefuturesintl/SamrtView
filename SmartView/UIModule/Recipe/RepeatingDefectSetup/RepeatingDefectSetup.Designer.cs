// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SmartView.UIModule.Recipe.RepeatingDefectSetup.RepeatingDefectSetupClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class RepeatingDefectSetup
    {
        
        #region Properties
        public UISmartViewRecipeManagWindow UISmartViewRecipeManagWindow
        {
            get
            {
                if ((this.mUISmartViewRecipeManagWindow == null))
                {
                    this.mUISmartViewRecipeManagWindow = new UISmartViewRecipeManagWindow();
                }
                return this.mUISmartViewRecipeManagWindow;
            }
        }
        
        public UIItemWindow7 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow7();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIDefineRepeatSourcesWindow UIDefineRepeatSourcesWindow
        {
            get
            {
                if ((this.mUIDefineRepeatSourcesWindow == null))
                {
                    this.mUIDefineRepeatSourcesWindow = new UIDefineRepeatSourcesWindow();
                }
                return this.mUIDefineRepeatSourcesWindow;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow();
                }
                return this.mUISaveWindow;
            }
        }
        
        public UIExportRepeatingDefecWindow UIExportRepeatingDefecWindow
        {
            get
            {
                if ((this.mUIExportRepeatingDefecWindow == null))
                {
                    this.mUIExportRepeatingDefecWindow = new UIExportRepeatingDefecWindow();
                }
                return this.mUIExportRepeatingDefecWindow;
            }
        }
        
        public UIImportRepeatingDefecWindow UIImportRepeatingDefecWindow
        {
            get
            {
                if ((this.mUIImportRepeatingDefecWindow == null))
                {
                    this.mUIImportRepeatingDefecWindow = new UIImportRepeatingDefecWindow();
                }
                return this.mUIImportRepeatingDefecWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISmartViewRecipeManagWindow mUISmartViewRecipeManagWindow;
        
        private UIItemWindow7 mUIItemWindow;
        
        private UIDefineRepeatSourcesWindow mUIDefineRepeatSourcesWindow;
        
        private UISaveWindow mUISaveWindow;
        
        private UIExportRepeatingDefecWindow mUIExportRepeatingDefecWindow;
        
        private UIImportRepeatingDefecWindow mUIImportRepeatingDefecWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewRecipeManagWindow : WinWindow
    {
        
        public UISmartViewRecipeManagWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Recipe Manager - Era-recipe1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6MDIForm";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIRepeatingDefectSetupWindow UIRepeatingDefectSetupWindow
        {
            get
            {
                if ((this.mUIRepeatingDefectSetupWindow == null))
                {
                    this.mUIRepeatingDefectSetupWindow = new UIRepeatingDefectSetupWindow(this);
                }
                return this.mUIRepeatingDefectSetupWindow;
            }
        }
        
        public UIRepeatingDefectNotifWindow UIRepeatingDefectNotifWindow
        {
            get
            {
                if ((this.mUIRepeatingDefectNotifWindow == null))
                {
                    this.mUIRepeatingDefectNotifWindow = new UIRepeatingDefectNotifWindow(this);
                }
                return this.mUIRepeatingDefectNotifWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIRepeatingDefectSetupWindow mUIRepeatingDefectSetupWindow;
        
        private UIRepeatingDefectNotifWindow mUIRepeatingDefectNotifWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TreeViewWndClass";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public UIItemTree UIItemTree
        {
            get
            {
                if ((this.mUIItemTree == null))
                {
                    this.mUIItemTree = new UIItemTree(this);
                }
                return this.mUIItemTree;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTree mUIItemTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemTree : WinTree
    {
        
        public UIItemTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public UILineTreeItem UILineTreeItem
        {
            get
            {
                if ((this.mUILineTreeItem == null))
                {
                    this.mUILineTreeItem = new UILineTreeItem(this);
                }
                return this.mUILineTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UILineTreeItem mUILineTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILineTreeItem : WinTreeItem
    {
        
        public UILineTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Line";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public UIStationTreeItem UIStationTreeItem
        {
            get
            {
                if ((this.mUIStationTreeItem == null))
                {
                    this.mUIStationTreeItem = new UIStationTreeItem(this);
                }
                return this.mUIStationTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIStationTreeItem mUIStationTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIStationTreeItem : WinTreeItem
    {
        
        public UIStationTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Station";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIView1TreeItem
        {
            get
            {
                if ((this.mUIView1TreeItem == null))
                {
                    this.mUIView1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIView1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "View 1";
                    this.mUIView1TreeItem.SearchProperties["Value"] = "2";
                    this.mUIView1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIView1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIView1TreeItem.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIView1TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIView1TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRepeatingDefectSetupWindow : WinWindow
    {
        
        public UIRepeatingDefectSetupWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32768";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public UIEnableWindow UIEnableWindow
        {
            get
            {
                if ((this.mUIEnableWindow == null))
                {
                    this.mUIEnableWindow = new UIEnableWindow(this);
                }
                return this.mUIEnableWindow;
            }
        }
        
        public UINotificationWindow UINotificationWindow
        {
            get
            {
                if ((this.mUINotificationWindow == null))
                {
                    this.mUINotificationWindow = new UINotificationWindow(this);
                }
                return this.mUINotificationWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow111 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow111(this);
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIItemWindow21 UIItemWindow21
        {
            get
            {
                if ((this.mUIItemWindow21 == null))
                {
                    this.mUIItemWindow21 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow21;
            }
        }
        
        public UIItemWindow31 UIItemWindow31
        {
            get
            {
                if ((this.mUIItemWindow31 == null))
                {
                    this.mUIItemWindow31 = new UIItemWindow31(this);
                }
                return this.mUIItemWindow31;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5(this);
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIExportWindow UIExportWindow
        {
            get
            {
                if ((this.mUIExportWindow == null))
                {
                    this.mUIExportWindow = new UIExportWindow(this);
                }
                return this.mUIExportWindow;
            }
        }
        
        public UIImportWindow UIImportWindow
        {
            get
            {
                if ((this.mUIImportWindow == null))
                {
                    this.mUIImportWindow = new UIImportWindow(this);
                }
                return this.mUIImportWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIEnableWindow mUIEnableWindow;
        
        private UINotificationWindow mUINotificationWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow111 mUIItemWindow11;
        
        private UIItemWindow21 mUIItemWindow21;
        
        private UIItemWindow31 mUIItemWindow31;
        
        private UIItemWindow5 mUIItemWindow5;
        
        private UIExportWindow mUIExportWindow;
        
        private UIImportWindow mUIImportWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEnableWindow : WinWindow
    {
        
        public UIEnableWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIEnableCheckBox
        {
            get
            {
                if ((this.mUIEnableCheckBox == null))
                {
                    this.mUIEnableCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIEnableCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Enable";
                    this.mUIEnableCheckBox.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIEnableCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIEnableCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UINotificationWindow : WinWindow
    {
        
        public UINotificationWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "11";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinButton UINotificationButton
        {
            get
            {
                if ((this.mUINotificationButton == null))
                {
                    this.mUINotificationButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINotificationButton.SearchProperties[WinButton.PropertyNames.Name] = "Notification...";
                    this.mUINotificationButton.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUINotificationButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINotificationButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "22";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "21";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "20";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "19";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "16";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow111 : WinWindow
    {
        
        public UIItemWindow111(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "15";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "14";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow31 : WinWindow
    {
        
        public UIItemWindow31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "17";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "...";
                    this.mUIItemButton.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIExportWindow : WinWindow
    {
        
        public UIExportWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "9";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinButton UIExportButton
        {
            get
            {
                if ((this.mUIExportButton == null))
                {
                    this.mUIExportButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIExportButton.SearchProperties[WinButton.PropertyNames.Name] = "Export...";
                    this.mUIExportButton.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIExportButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIExportButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIImportWindow : WinWindow
    {
        
        public UIImportWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "8";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinButton UIImportButton
        {
            get
            {
                if ((this.mUIImportButton == null))
                {
                    this.mUIImportButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIImportButton.SearchProperties[WinButton.PropertyNames.Name] = "Import...";
                    this.mUIImportButton.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIImportButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIImportButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRepeatingDefectNotifWindow : WinWindow
    {
        
        public UIRepeatingDefectNotifWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32769";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public UIItemWindow6 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow6(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIApplyWindow UIApplyWindow
        {
            get
            {
                if ((this.mUIApplyWindow == null))
                {
                    this.mUIApplyWindow = new UIApplyWindow(this);
                }
                return this.mUIApplyWindow;
            }
        }
        
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow6 mUIItemWindow;
        
        private UIApplyWindow mUIApplyWindow;
        
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemList.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIApplyWindow : WinWindow
    {
        
        public UIApplyWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinButton UIApplyButton
        {
            get
            {
                if ((this.mUIApplyButton == null))
                {
                    this.mUIApplyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIApplyButton.SearchProperties[WinButton.PropertyNames.Name] = "Apply";
                    this.mUIApplyButton.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIApplyButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIApplyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "4";
            this.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("SmartView Recipe Manager - Era-recipe1");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIRepeatingDefectSetupMenuItem
        {
            get
            {
                if ((this.mUIRepeatingDefectSetupMenuItem == null))
                {
                    this.mUIRepeatingDefectSetupMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIRepeatingDefectSetupMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Repeating Defect Setup...";
                    #endregion
                }
                return this.mUIRepeatingDefectSetupMenuItem;
            }
        }
        
        public WinMenuItem UINewMenuItem
        {
            get
            {
                if ((this.mUINewMenuItem == null))
                {
                    this.mUINewMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUINewMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "New";
                    #endregion
                }
                return this.mUINewMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIRepeatingDefectSetupMenuItem;
        
        private WinMenuItem mUINewMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDefineRepeatSourcesWindow : WinWindow
    {
        
        public UIDefineRepeatSourcesWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Define Repeat Sources";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Define Repeat Sources");
            #endregion
        }
        
        #region Properties
        public UIToolbarWindow UIToolbarWindow
        {
            get
            {
                if ((this.mUIToolbarWindow == null))
                {
                    this.mUIToolbarWindow = new UIToolbarWindow(this);
                }
                return this.mUIToolbarWindow;
            }
        }
        
        public UIPanelWindow UIPanelWindow
        {
            get
            {
                if ((this.mUIPanelWindow == null))
                {
                    this.mUIPanelWindow = new UIPanelWindow(this);
                }
                return this.mUIPanelWindow;
            }
        }
        
        public UIFocusSinkWindow UIFocusSinkWindow
        {
            get
            {
                if ((this.mUIFocusSinkWindow == null))
                {
                    this.mUIFocusSinkWindow = new UIFocusSinkWindow(this);
                }
                return this.mUIFocusSinkWindow;
            }
        }
        
        public UIEnternewsourcenameWindow UIEnternewsourcenameWindow
        {
            get
            {
                if ((this.mUIEnternewsourcenameWindow == null))
                {
                    this.mUIEnternewsourcenameWindow = new UIEnternewsourcenameWindow(this);
                }
                return this.mUIEnternewsourcenameWindow;
            }
        }
        
        public UIItemWindow8 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow8(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIDefineRepeatSourcesTitleBar UIDefineRepeatSourcesTitleBar
        {
            get
            {
                if ((this.mUIDefineRepeatSourcesTitleBar == null))
                {
                    this.mUIDefineRepeatSourcesTitleBar = new UIDefineRepeatSourcesTitleBar(this);
                }
                return this.mUIDefineRepeatSourcesTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIToolbarWindow mUIToolbarWindow;
        
        private UIPanelWindow mUIPanelWindow;
        
        private UIFocusSinkWindow mUIFocusSinkWindow;
        
        private UIEnternewsourcenameWindow mUIEnternewsourcenameWindow;
        
        private UIItemWindow8 mUIItemWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UIDefineRepeatSourcesTitleBar mUIDefineRepeatSourcesTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIToolbarWindow : WinWindow
    {
        
        public UIToolbarWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "toolbar";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Define Repeat Sources");
            #endregion
        }
        
        #region Properties
        public WinButton UIFilemenuButton
        {
            get
            {
                if ((this.mUIFilemenuButton == null))
                {
                    this.mUIFilemenuButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFilemenuButton.SearchProperties[WinButton.PropertyNames.Name] = "File menu";
                    this.mUIFilemenuButton.WindowTitles.Add("Define Repeat Sources");
                    #endregion
                }
                return this.mUIFilemenuButton;
            }
        }
        
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Define Repeat Sources");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIFilemenuButton;
        
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPanelWindow : WinWindow
    {
        
        public UIPanelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "panel";
            this.WindowTitles.Add("Define Repeat Sources");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanelClient
        {
            get
            {
                if ((this.mUIPanelClient == null))
                {
                    this.mUIPanelClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanelClient.WindowTitles.Add("Define Repeat Sources");
                    #endregion
                }
                return this.mUIPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFocusSinkWindow : WinWindow
    {
        
        public UIFocusSinkWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "focusSink";
            this.WindowTitles.Add("Define Repeat Sources");
            #endregion
        }
        
        #region Properties
        public WinClient UIFocusSinkClient
        {
            get
            {
                if ((this.mUIFocusSinkClient == null))
                {
                    this.mUIFocusSinkClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIFocusSinkClient.SearchProperties[WinControl.PropertyNames.Name] = "focusSink";
                    this.mUIFocusSinkClient.WindowTitles.Add("Define Repeat Sources");
                    #endregion
                }
                return this.mUIFocusSinkClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIFocusSinkClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEnternewsourcenameWindow : WinWindow
    {
        
        public UIEnternewsourcenameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "enter new source name";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Define Repeat Sources");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Define Repeat Sources");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Define Repeat Sources");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Define Repeat Sources");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Define Repeat Sources");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Define Repeat Sources");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDefineRepeatSourcesTitleBar : WinTitleBar
    {
        
        public UIDefineRepeatSourcesTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Define Repeat Sources");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Define Repeat Sources");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Save");
            #endregion
        }
        
        #region Properties
        public UITextWindow UITextWindow
        {
            get
            {
                if ((this.mUITextWindow == null))
                {
                    this.mUITextWindow = new UITextWindow(this);
                }
                return this.mUITextWindow;
            }
        }
        
        public UIOKWindow2 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow2(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITextWindow mUITextWindow;
        
        private UIOKWindow2 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITextWindow : WinWindow
    {
        
        public UITextWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "text";
            this.WindowTitles.Add("Save");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.WindowTitles.Add("Save");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow2 : WinWindow
    {
        
        public UIOKWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.WindowTitles.Add("Save");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Save");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIExportRepeatingDefecWindow : WinWindow
    {
        
        public UIExportRepeatingDefecWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Export Repeating Defect Setup";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Export Repeating Defect Setup");
            #endregion
        }
        
        #region Properties
        public UIDetailsPanePane UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        
        public UISaveWindow1 UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow1(this);
                }
                return this.mUISaveWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsPanePane mUIDetailsPanePane;
        
        private UISaveWindow1 mUISaveWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDetailsPanePane : WinPane
    {
        
        public UIDetailsPanePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Export Repeating Defect Setup");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Export Repeating Defect Setup");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISaveWindow1 : WinWindow
    {
        
        public UISaveWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Export Repeating Defect Setup");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Export Repeating Defect Setup");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIImportRepeatingDefecWindow : WinWindow
    {
        
        public UIImportRepeatingDefecWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Import Repeating Defect Setup";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Import Repeating Defect Setup");
            #endregion
        }
        
        #region Properties
        public UIItemWindow9 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow9(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOpenWindow UIOpenWindow
        {
            get
            {
                if ((this.mUIOpenWindow == null))
                {
                    this.mUIOpenWindow = new UIOpenWindow(this);
                }
                return this.mUIOpenWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow9 mUIItemWindow;
        
        private UIOpenWindow mUIOpenWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow9 : WinWindow
    {
        
        public UIItemWindow9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Import Repeating Defect Setup");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Import Repeating Defect Setup");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOpenWindow : WinWindow
    {
        
        public UIOpenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Import Repeating Defect Setup");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Import Repeating Defect Setup");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
}
