// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SmartView.UIModule.Console.LaneViewer.DisplayOptions.DisplayOptionClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class DisplayOption
    {
        
        #region Properties
        public UISmartViewConsole4CamWindow UISmartViewConsole4CamWindow
        {
            get
            {
                if ((this.mUISmartViewConsole4CamWindow == null))
                {
                    this.mUISmartViewConsole4CamWindow = new UISmartViewConsole4CamWindow();
                }
                return this.mUISmartViewConsole4CamWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIDisplayOptionsWindow UIDisplayOptionsWindow
        {
            get
            {
                if ((this.mUIDisplayOptionsWindow == null))
                {
                    this.mUIDisplayOptionsWindow = new UIDisplayOptionsWindow();
                }
                return this.mUIDisplayOptionsWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISmartViewConsole4CamWindow mUISmartViewConsole4CamWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIDisplayOptionsWindow mUIDisplayOptionsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewConsole4CamWindow : WinWindow
    {
        
        public UISmartViewConsole4CamWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Console: 4 Camera, Station";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6MDIForm";
            this.WindowTitles.Add("SmartView Console: 4 Camera, Station");
            #endregion
        }
        
        #region Properties
        public UILaneViewerWindow UILaneViewerWindow
        {
            get
            {
                if ((this.mUILaneViewerWindow == null))
                {
                    this.mUILaneViewerWindow = new UILaneViewerWindow(this);
                }
                return this.mUILaneViewerWindow;
            }
        }
        #endregion
        
        #region Fields
        private UILaneViewerWindow mUILaneViewerWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILaneViewerWindow : WinWindow
    {
        
        public UILaneViewerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32769";
            this.WindowTitles.Add("SmartView Console: 4 Camera, Station");
            #endregion
        }
        
        #region Properties
        public UILaneViewerClient UILaneViewerClient
        {
            get
            {
                if ((this.mUILaneViewerClient == null))
                {
                    this.mUILaneViewerClient = new UILaneViewerClient(this);
                }
                return this.mUILaneViewerClient;
            }
        }
        #endregion
        
        #region Fields
        private UILaneViewerClient mUILaneViewerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILaneViewerClient : WinClient
    {
        
        public UILaneViewerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Lane Viewer";
            this.WindowTitles.Add("SmartView Console: 4 Camera, Station");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6UserControlDC";
                    this.mUIItemWindow.WindowTitles.Add("SmartView Console: 4 Camera, Station");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DDFLT";
            #endregion
        }
        
        #region Properties
        public WinClient UIDesktopClient
        {
            get
            {
                if ((this.mUIDesktopClient == null))
                {
                    this.mUIDesktopClient = new WinClient(this);
                }
                return this.mUIDesktopClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDesktopClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDisplayOptionsWindow : WinWindow
    {
        
        public UIDisplayOptionsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Display Options";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6FormDC";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public UICheck1Window UICheck1Window
        {
            get
            {
                if ((this.mUICheck1Window == null))
                {
                    this.mUICheck1Window = new UICheck1Window(this);
                }
                return this.mUICheck1Window;
            }
        }
        
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UICheck1Window1 UICheck1Window1
        {
            get
            {
                if ((this.mUICheck1Window1 == null))
                {
                    this.mUICheck1Window1 = new UICheck1Window1(this);
                }
                return this.mUICheck1Window1;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIShowlanesWindow UIShowlanesWindow
        {
            get
            {
                if ((this.mUIShowlanesWindow == null))
                {
                    this.mUIShowlanesWindow = new UIShowlanesWindow(this);
                }
                return this.mUIShowlanesWindow;
            }
        }
        
        public UIShowHidelanesbasedonWindow UIShowHidelanesbasedonWindow
        {
            get
            {
                if ((this.mUIShowHidelanesbasedonWindow == null))
                {
                    this.mUIShowHidelanesbasedonWindow = new UIShowHidelanesbasedonWindow(this);
                }
                return this.mUIShowHidelanesbasedonWindow;
            }
        }
        
        public UICustomWindow UICustomWindow
        {
            get
            {
                if ((this.mUICustomWindow == null))
                {
                    this.mUICustomWindow = new UICustomWindow(this);
                }
                return this.mUICustomWindow;
            }
        }
        
        public UINormalizertargetWindow UINormalizertargetWindow
        {
            get
            {
                if ((this.mUINormalizertargetWindow == null))
                {
                    this.mUINormalizertargetWindow = new UINormalizertargetWindow(this);
                }
                return this.mUINormalizertargetWindow;
            }
        }
        
        public UIShowmarkreaderviewsWindow UIShowmarkreaderviewsWindow
        {
            get
            {
                if ((this.mUIShowmarkreaderviewsWindow == null))
                {
                    this.mUIShowmarkreaderviewsWindow = new UIShowmarkreaderviewsWindow(this);
                }
                return this.mUIShowmarkreaderviewsWindow;
            }
        }
        
        public UIShowWindow UIShowWindow
        {
            get
            {
                if ((this.mUIShowWindow == null))
                {
                    this.mUIShowWindow = new UIShowWindow(this);
                }
                return this.mUIShowWindow;
            }
        }
        
        public UIDisplayOptionsTitleBar UIDisplayOptionsTitleBar
        {
            get
            {
                if ((this.mUIDisplayOptionsTitleBar == null))
                {
                    this.mUIDisplayOptionsTitleBar = new UIDisplayOptionsTitleBar(this);
                }
                return this.mUIDisplayOptionsTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UICheck1Window mUICheck1Window;
        
        private UIItemWindow2 mUIItemWindow;
        
        private UICheck1Window1 mUICheck1Window1;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIShowlanesWindow mUIShowlanesWindow;
        
        private UIShowHidelanesbasedonWindow mUIShowHidelanesbasedonWindow;
        
        private UICustomWindow mUICustomWindow;
        
        private UINormalizertargetWindow mUINormalizertargetWindow;
        
        private UIShowmarkreaderviewsWindow mUIShowmarkreaderviewsWindow;
        
        private UIShowWindow mUIShowWindow;
        
        private UIDisplayOptionsTitleBar mUIDisplayOptionsTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICheck1Window : WinWindow
    {
        
        public UICheck1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "15";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UICheck1CheckBox
        {
            get
            {
                if ((this.mUICheck1CheckBox == null))
                {
                    this.mUICheck1CheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUICheck1CheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Check1";
                    this.mUICheck1CheckBox.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUICheck1CheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUICheck1CheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "14";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICheck1Window1 : WinWindow
    {
        
        public UICheck1Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "13";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UICheck1CheckBox
        {
            get
            {
                if ((this.mUICheck1CheckBox == null))
                {
                    this.mUICheck1CheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUICheck1CheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Check1";
                    this.mUICheck1CheckBox.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUICheck1CheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUICheck1CheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "11";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "9";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIShowlanesWindow : WinWindow
    {
        
        public UIShowlanesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "8";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIShowlanesCheckBox
        {
            get
            {
                if ((this.mUIShowlanesCheckBox == null))
                {
                    this.mUIShowlanesCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIShowlanesCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show <> lanes";
                    this.mUIShowlanesCheckBox.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUIShowlanesCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIShowlanesCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIShowHidelanesbasedonWindow : WinWindow
    {
        
        public UIShowHidelanesbasedonWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "7";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIShowHidelanesbasedonCheckBox
        {
            get
            {
                if ((this.mUIShowHidelanesbasedonCheckBox == null))
                {
                    this.mUIShowHidelanesbasedonCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIShowHidelanesbasedonCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show/Hide lanes based on query";
                    this.mUIShowHidelanesbasedonCheckBox.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUIShowHidelanesbasedonCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIShowHidelanesbasedonCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICustomWindow : WinWindow
    {
        
        public UICustomWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "3";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UICustomRadioButton
        {
            get
            {
                if ((this.mUICustomRadioButton == null))
                {
                    this.mUICustomRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUICustomRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Custom";
                    this.mUICustomRadioButton.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUICustomRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUICustomRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UINormalizertargetWindow : WinWindow
    {
        
        public UINormalizertargetWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "4";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UINormalizertargetRadioButton
        {
            get
            {
                if ((this.mUINormalizertargetRadioButton == null))
                {
                    this.mUINormalizertargetRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUINormalizertargetRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Normalizer target";
                    this.mUINormalizertargetRadioButton.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUINormalizertargetRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUINormalizertargetRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIShowmarkreaderviewsWindow : WinWindow
    {
        
        public UIShowmarkreaderviewsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIShowmarkreaderviewsCheckBox
        {
            get
            {
                if ((this.mUIShowmarkreaderviewsCheckBox == null))
                {
                    this.mUIShowmarkreaderviewsCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIShowmarkreaderviewsCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show mark reader views";
                    this.mUIShowmarkreaderviewsCheckBox.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUIShowmarkreaderviewsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIShowmarkreaderviewsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIShowWindow : WinWindow
    {
        
        public UIShowWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "4";
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIShowCheckBox
        {
            get
            {
                if ((this.mUIShowCheckBox == null))
                {
                    this.mUIShowCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIShowCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show";
                    this.mUIShowCheckBox.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUIShowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIShowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDisplayOptionsTitleBar : WinTitleBar
    {
        
        public UIDisplayOptionsTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Display Options");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Display Options");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
