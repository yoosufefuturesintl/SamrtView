// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SmartView.UIModule.Console.LaneViewer.LaneViewerClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class LaneViewer
    {
        
        #region Properties
        public UISmartViewConsole4CamWindow UISmartViewConsole4CamWindow
        {
            get
            {
                if ((this.mUISmartViewConsole4CamWindow == null))
                {
                    this.mUISmartViewConsole4CamWindow = new UISmartViewConsole4CamWindow();
                }
                return this.mUISmartViewConsole4CamWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UILiveModeSettingsWindow UILiveModeSettingsWindow
        {
            get
            {
                if ((this.mUILiveModeSettingsWindow == null))
                {
                    this.mUILiveModeSettingsWindow = new UILiveModeSettingsWindow();
                }
                return this.mUILiveModeSettingsWindow;
            }
        }
        
        public UISideLabelsWindow UISideLabelsWindow
        {
            get
            {
                if ((this.mUISideLabelsWindow == null))
                {
                    this.mUISideLabelsWindow = new UISideLabelsWindow();
                }
                return this.mUISideLabelsWindow;
            }
        }
        
        public UIQueryDefinitionWindow UIQueryDefinitionWindow
        {
            get
            {
                if ((this.mUIQueryDefinitionWindow == null))
                {
                    this.mUIQueryDefinitionWindow = new UIQueryDefinitionWindow();
                }
                return this.mUIQueryDefinitionWindow;
            }
        }
        
        public UIItemWindow14 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow14();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UISmartViewConsoleWindow UISmartViewConsoleWindow
        {
            get
            {
                if ((this.mUISmartViewConsoleWindow == null))
                {
                    this.mUISmartViewConsoleWindow = new UISmartViewConsoleWindow();
                }
                return this.mUISmartViewConsoleWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISmartViewConsole4CamWindow mUISmartViewConsole4CamWindow;
        
        private UIItemWindow2 mUIItemWindow;
        
        private UILiveModeSettingsWindow mUILiveModeSettingsWindow;
        
        private UISideLabelsWindow mUISideLabelsWindow;
        
        private UIQueryDefinitionWindow mUIQueryDefinitionWindow;
        
        private UIItemWindow14 mUIItemWindow1;
        
        private UISmartViewConsoleWindow mUISmartViewConsoleWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewConsole4CamWindow : WinWindow
    {
        
        public UISmartViewConsole4CamWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Console: 4 Camera, Station";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6MDIForm";
            this.WindowTitles.Add("SmartView Console: 4 Camera, Station");
            #endregion
        }
        
        #region Properties
        public UILaneViewerWindow UILaneViewerWindow
        {
            get
            {
                if ((this.mUILaneViewerWindow == null))
                {
                    this.mUILaneViewerWindow = new UILaneViewerWindow(this);
                }
                return this.mUILaneViewerWindow;
            }
        }
        
        public UIDefectViewerView1Window UIDefectViewerView1Window
        {
            get
            {
                if ((this.mUIDefectViewerView1Window == null))
                {
                    this.mUIDefectViewerView1Window = new UIDefectViewerView1Window(this);
                }
                return this.mUIDefectViewerView1Window;
            }
        }
        #endregion
        
        #region Fields
        private UILaneViewerWindow mUILaneViewerWindow;
        
        private UIDefectViewerView1Window mUIDefectViewerView1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILaneViewerWindow : WinWindow
    {
        
        public UILaneViewerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32770";
            this.WindowTitles.Add("SmartView Console: 4 Camera, Station");
            #endregion
        }
        
        #region Properties
        public UILaneViewerClient UILaneViewerClient
        {
            get
            {
                if ((this.mUILaneViewerClient == null))
                {
                    this.mUILaneViewerClient = new UILaneViewerClient(this);
                }
                return this.mUILaneViewerClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UILaneViewerClient mUILaneViewerClient;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILaneViewerClient : WinClient
    {
        
        public UILaneViewerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Lane Viewer";
            this.WindowTitles.Add("SmartView Console: 4 Camera, Station");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6UserControlDC";
                    this.mUIItemWindow.WindowTitles.Add("SmartView Console: 4 Camera, Station");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6UserControlDC";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("SmartView Console: 4 Camera, Station");
            #endregion
        }
        
        #region Properties
        public WinClient UILaneViewerClient
        {
            get
            {
                if ((this.mUILaneViewerClient == null))
                {
                    this.mUILaneViewerClient = new WinClient(this);
                    #region Search Criteria
                    this.mUILaneViewerClient.WindowTitles.Add("SmartView Console: 4 Camera, Station");
                    #endregion
                }
                return this.mUILaneViewerClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUILaneViewerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSFlexGridWndClass";
            this.WindowTitles.Add("SmartView Console: 4 Camera, Station");
            #endregion
        }
        
        #region Properties
        public WinClient UILaneViewerClient
        {
            get
            {
                if ((this.mUILaneViewerClient == null))
                {
                    this.mUILaneViewerClient = new WinClient(this);
                    #region Search Criteria
                    this.mUILaneViewerClient.WindowTitles.Add("SmartView Console: 4 Camera, Station");
                    #endregion
                }
                return this.mUILaneViewerClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUILaneViewerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDefectViewerView1Window : WinWindow
    {
        
        public UIDefectViewerView1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32771";
            this.WindowTitles.Add("SmartView Console: 4 Camera, Station");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("SmartView Console: 4 Camera, Station");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow11 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DDFLT";
            #endregion
        }
        
        #region Properties
        public WinClient UIDesktopClient
        {
            get
            {
                if ((this.mUIDesktopClient == null))
                {
                    this.mUIDesktopClient = new WinClient(this);
                }
                return this.mUIDesktopClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDesktopClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILiveModeSettingsWindow : WinWindow
    {
        
        public UILiveModeSettingsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Live Mode Settings";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6FormDC";
            this.WindowTitles.Add("Live Mode Settings");
            #endregion
        }
        
        #region Properties
        public UIStoponselectionWindow UIStoponselectionWindow
        {
            get
            {
                if ((this.mUIStoponselectionWindow == null))
                {
                    this.mUIStoponselectionWindow = new UIStoponselectionWindow(this);
                }
                return this.mUIStoponselectionWindow;
            }
        }
        
        public UIAutomaticallyresumelWindow UIAutomaticallyresumelWindow
        {
            get
            {
                if ((this.mUIAutomaticallyresumelWindow == null))
                {
                    this.mUIAutomaticallyresumelWindow = new UIAutomaticallyresumelWindow(this);
                }
                return this.mUIAutomaticallyresumelWindow;
            }
        }
        
        public UIText1Window UIText1Window
        {
            get
            {
                if ((this.mUIText1Window == null))
                {
                    this.mUIText1Window = new UIText1Window(this);
                }
                return this.mUIText1Window;
            }
        }
        
        public UIKeepvisibleWindow UIKeepvisibleWindow
        {
            get
            {
                if ((this.mUIKeepvisibleWindow == null))
                {
                    this.mUIKeepvisibleWindow = new UIKeepvisibleWindow(this);
                }
                return this.mUIKeepvisibleWindow;
            }
        }
        
        public UIText1Window1 UIText1Window1
        {
            get
            {
                if ((this.mUIText1Window1 == null))
                {
                    this.mUIText1Window1 = new UIText1Window1(this);
                }
                return this.mUIText1Window1;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIStoponselectionWindow mUIStoponselectionWindow;
        
        private UIAutomaticallyresumelWindow mUIAutomaticallyresumelWindow;
        
        private UIText1Window mUIText1Window;
        
        private UIKeepvisibleWindow mUIKeepvisibleWindow;
        
        private UIText1Window1 mUIText1Window1;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIStoponselectionWindow : WinWindow
    {
        
        public UIStoponselectionWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5";
            this.WindowTitles.Add("Live Mode Settings");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIStoponselectionCheckBox
        {
            get
            {
                if ((this.mUIStoponselectionCheckBox == null))
                {
                    this.mUIStoponselectionCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIStoponselectionCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Stop on selection";
                    this.mUIStoponselectionCheckBox.WindowTitles.Add("Live Mode Settings");
                    #endregion
                }
                return this.mUIStoponselectionCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIStoponselectionCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAutomaticallyresumelWindow : WinWindow
    {
        
        public UIAutomaticallyresumelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Live Mode Settings");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIAutomaticallyresumelCheckBox
        {
            get
            {
                if ((this.mUIAutomaticallyresumelCheckBox == null))
                {
                    this.mUIAutomaticallyresumelCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIAutomaticallyresumelCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Automatically resume live mode";
                    this.mUIAutomaticallyresumelCheckBox.WindowTitles.Add("Live Mode Settings");
                    #endregion
                }
                return this.mUIAutomaticallyresumelCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIAutomaticallyresumelCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIText1Window : WinWindow
    {
        
        public UIText1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "7";
            this.WindowTitles.Add("Live Mode Settings");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Live Mode Settings");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIKeepvisibleWindow : WinWindow
    {
        
        public UIKeepvisibleWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Live Mode Settings");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIKeepvisibleCheckBox
        {
            get
            {
                if ((this.mUIKeepvisibleCheckBox == null))
                {
                    this.mUIKeepvisibleCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIKeepvisibleCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Keep visible";
                    this.mUIKeepvisibleCheckBox.WindowTitles.Add("Live Mode Settings");
                    #endregion
                }
                return this.mUIKeepvisibleCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIKeepvisibleCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIText1Window1 : WinWindow
    {
        
        public UIText1Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "3";
            this.WindowTitles.Add("Live Mode Settings");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Live Mode Settings");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10";
            this.WindowTitles.Add("Live Mode Settings");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Live Mode Settings");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISideLabelsWindow : WinWindow
    {
        
        public UISideLabelsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Side Labels";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6FormDC";
            this.WindowTitles.Add("Side Labels");
            #endregion
        }
        
        #region Properties
        public UIUsedefaultWindow UIUsedefaultWindow
        {
            get
            {
                if ((this.mUIUsedefaultWindow == null))
                {
                    this.mUIUsedefaultWindow = new UIUsedefaultWindow(this);
                }
                return this.mUIUsedefaultWindow;
            }
        }
        
        public UIItemWindow3 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow3(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIUsedefaultWindow mUIUsedefaultWindow;
        
        private UIItemWindow3 mUIItemWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIUsedefaultWindow : WinWindow
    {
        
        public UIUsedefaultWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "4";
            this.WindowTitles.Add("Side Labels");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIUsedefaultCheckBox
        {
            get
            {
                if ((this.mUIUsedefaultCheckBox == null))
                {
                    this.mUIUsedefaultCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIUsedefaultCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Use default";
                    this.mUIUsedefaultCheckBox.WindowTitles.Add("Side Labels");
                    #endregion
                }
                return this.mUIUsedefaultCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIUsedefaultCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5";
            this.WindowTitles.Add("Side Labels");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Side Labels");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSFlexGridWndClass";
            this.WindowTitles.Add("Side Labels");
            #endregion
        }
        
        #region Properties
        public WinClient UISideLabelsClient
        {
            get
            {
                if ((this.mUISideLabelsClient == null))
                {
                    this.mUISideLabelsClient = new WinClient(this);
                    #region Search Criteria
                    this.mUISideLabelsClient.WindowTitles.Add("Side Labels");
                    #endregion
                }
                return this.mUISideLabelsClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUISideLabelsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "3";
            this.WindowTitles.Add("Side Labels");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Side Labels");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIQueryDefinitionWindow : WinWindow
    {
        
        public UIQueryDefinitionWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Query Definition";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6FormDC";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public UIApplyqueryWindow UIApplyqueryWindow
        {
            get
            {
                if ((this.mUIApplyqueryWindow == null))
                {
                    this.mUIApplyqueryWindow = new UIApplyqueryWindow(this);
                }
                return this.mUIApplyqueryWindow;
            }
        }
        
        public UIAllWindow UIAllWindow
        {
            get
            {
                if ((this.mUIAllWindow == null))
                {
                    this.mUIAllWindow = new UIAllWindow(this);
                }
                return this.mUIAllWindow;
            }
        }
        
        public UISeverityWindow UISeverityWindow
        {
            get
            {
                if ((this.mUISeverityWindow == null))
                {
                    this.mUISeverityWindow = new UISeverityWindow(this);
                }
                return this.mUISeverityWindow;
            }
        }
        
        public UIText1Window2 UIText1Window
        {
            get
            {
                if ((this.mUIText1Window == null))
                {
                    this.mUIText1Window = new UIText1Window2(this);
                }
                return this.mUIText1Window;
            }
        }
        
        public UIOnlyrepeatingWindow UIOnlyrepeatingWindow
        {
            get
            {
                if ((this.mUIOnlyrepeatingWindow == null))
                {
                    this.mUIOnlyrepeatingWindow = new UIOnlyrepeatingWindow(this);
                }
                return this.mUIOnlyrepeatingWindow;
            }
        }
        
        public UISelectedclassesWindow UISelectedclassesWindow
        {
            get
            {
                if ((this.mUISelectedclassesWindow == null))
                {
                    this.mUISelectedclassesWindow = new UISelectedclassesWindow(this);
                }
                return this.mUISelectedclassesWindow;
            }
        }
        
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow13 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow13(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow31 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow31(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow41 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow41(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIQueryDefinitionTitleBar UIQueryDefinitionTitleBar
        {
            get
            {
                if ((this.mUIQueryDefinitionTitleBar == null))
                {
                    this.mUIQueryDefinitionTitleBar = new UIQueryDefinitionTitleBar(this);
                }
                return this.mUIQueryDefinitionTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIApplyqueryWindow mUIApplyqueryWindow;
        
        private UIAllWindow mUIAllWindow;
        
        private UISeverityWindow mUISeverityWindow;
        
        private UIText1Window2 mUIText1Window;
        
        private UIOnlyrepeatingWindow mUIOnlyrepeatingWindow;
        
        private UISelectedclassesWindow mUISelectedclassesWindow;
        
        private UIItemWindow4 mUIItemWindow;
        
        private UIItemWindow13 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        
        private UIItemWindow31 mUIItemWindow3;
        
        private UIItemWindow41 mUIItemWindow4;
        
        private UIQueryDefinitionTitleBar mUIQueryDefinitionTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIApplyqueryWindow : WinWindow
    {
        
        public UIApplyqueryWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "29";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIApplyqueryCheckBox
        {
            get
            {
                if ((this.mUIApplyqueryCheckBox == null))
                {
                    this.mUIApplyqueryCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIApplyqueryCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Apply query";
                    this.mUIApplyqueryCheckBox.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUIApplyqueryCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIApplyqueryCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAllWindow : WinWindow
    {
        
        public UIAllWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "26";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIAllRadioButton
        {
            get
            {
                if ((this.mUIAllRadioButton == null))
                {
                    this.mUIAllRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIAllRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "All";
                    this.mUIAllRadioButton.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUIAllRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIAllRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISeverityWindow : WinWindow
    {
        
        public UISeverityWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "25";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UISeverityRadioButton
        {
            get
            {
                if ((this.mUISeverityRadioButton == null))
                {
                    this.mUISeverityRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUISeverityRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Severity >=";
                    this.mUISeverityRadioButton.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUISeverityRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUISeverityRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIText1Window2 : WinWindow
    {
        
        public UIText1Window2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "22";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOnlyrepeatingWindow : WinWindow
    {
        
        public UIOnlyrepeatingWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "23";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIOnlyrepeatingRadioButton
        {
            get
            {
                if ((this.mUIOnlyrepeatingRadioButton == null))
                {
                    this.mUIOnlyrepeatingRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIOnlyrepeatingRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Only repeating";
                    this.mUIOnlyrepeatingRadioButton.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUIOnlyrepeatingRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIOnlyrepeatingRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISelectedclassesWindow : WinWindow
    {
        
        public UISelectedclassesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "24";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UISelectedclassesRadioButton
        {
            get
            {
                if ((this.mUISelectedclassesRadioButton == null))
                {
                    this.mUISelectedclassesRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUISelectedclassesRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Selected classes";
                    this.mUISelectedclassesRadioButton.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUISelectedclassesRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUISelectedclassesRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "27";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinListItem UIDiscreteExtremeBrighListItem
        {
            get
            {
                if ((this.mUIDiscreteExtremeBrighListItem == null))
                {
                    this.mUIDiscreteExtremeBrighListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIDiscreteExtremeBrighListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Discrete Extreme Bright";
                    this.mUIDiscreteExtremeBrighListItem.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUIDiscreteExtremeBrighListItem;
            }
        }
        
        public WinList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemList.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIDiscreteExtremeBrighListItem;
        
        private WinList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "18";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemList.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "18";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemList.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow31 : WinWindow
    {
        
        public UIItemWindow31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "18";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinListItem UIItem1ListItem
        {
            get
            {
                if ((this.mUIItem1ListItem == null))
                {
                    this.mUIItem1ListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItem1ListItem.SearchProperties[WinListItem.PropertyNames.Name] = "1";
                    this.mUIItem1ListItem.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUIItem1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIItem1ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow41 : WinWindow
    {
        
        public UIItemWindow41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "18";
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinListItem UIItem1ListItem
        {
            get
            {
                if ((this.mUIItem1ListItem == null))
                {
                    this.mUIItem1ListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItem1ListItem.SearchProperties[WinListItem.PropertyNames.Name] = "1";
                    this.mUIItem1ListItem.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUIItem1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIItem1ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIQueryDefinitionTitleBar : WinTitleBar
    {
        
        public UIQueryDefinitionTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Query Definition");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Query Definition");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow14 : WinWindow
    {
        
        public UIItemWindow14()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIClearAllMenuItem
        {
            get
            {
                if ((this.mUIClearAllMenuItem == null))
                {
                    this.mUIClearAllMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIClearAllMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Clear All";
                    #endregion
                }
                return this.mUIClearAllMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIClearAllMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewConsoleWindow : WinWindow
    {
        
        public UISmartViewConsoleWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Console";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("SmartView Console");
            #endregion
        }
        
        #region Properties
        public UIRetryWindow UIRetryWindow
        {
            get
            {
                if ((this.mUIRetryWindow == null))
                {
                    this.mUIRetryWindow = new UIRetryWindow(this);
                }
                return this.mUIRetryWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIRetryWindow mUIRetryWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRetryWindow : WinWindow
    {
        
        public UIRetryWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5202";
            this.WindowTitles.Add("SmartView Console");
            #endregion
        }
        
        #region Properties
        public WinButton UIRetryButton
        {
            get
            {
                if ((this.mUIRetryButton == null))
                {
                    this.mUIRetryButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIRetryButton.SearchProperties[WinButton.PropertyNames.Name] = "Retry";
                    this.mUIRetryButton.WindowTitles.Add("SmartView Console");
                    #endregion
                }
                return this.mUIRetryButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIRetryButton;
        #endregion
    }
}
