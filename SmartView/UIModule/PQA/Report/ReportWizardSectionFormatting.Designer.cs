// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SmartView.UIModule.PQA.Report.ReportWizardSectionFormattingClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class ReportWizardSectionFormatting
    {
        
        #region Properties
        public UISmartViewProductionQWindow UISmartViewProductionQWindow
        {
            get
            {
                if ((this.mUISmartViewProductionQWindow == null))
                {
                    this.mUISmartViewProductionQWindow = new UISmartViewProductionQWindow();
                }
                return this.mUISmartViewProductionQWindow;
            }
        }
        
        public UILaneSummaryWindow1 UILaneSummaryWindow
        {
            get
            {
                if ((this.mUILaneSummaryWindow == null))
                {
                    this.mUILaneSummaryWindow = new UILaneSummaryWindow1();
                }
                return this.mUILaneSummaryWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISmartViewProductionQWindow mUISmartViewProductionQWindow;
        
        private UILaneSummaryWindow1 mUILaneSummaryWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewProductionQWindow : WinWindow
    {
        
        public UISmartViewProductionQWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Production Quality Advisor";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("SmartView Production Quality Advisor");
            #endregion
        }
        
        #region Properties
        public UILaneSummaryWindow UILaneSummaryWindow
        {
            get
            {
                if ((this.mUILaneSummaryWindow == null))
                {
                    this.mUILaneSummaryWindow = new UILaneSummaryWindow(this);
                }
                return this.mUILaneSummaryWindow;
            }
        }
        #endregion
        
        #region Fields
        private UILaneSummaryWindow mUILaneSummaryWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILaneSummaryWindow : WinWindow
    {
        
        public UILaneSummaryWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "PqaFormDataSelect";
            this.WindowTitles.Add("SmartView Production Quality Advisor");
            #endregion
        }
        
        #region Properties
        public UIToolBarPreviewWindow UIToolBarPreviewWindow
        {
            get
            {
                if ((this.mUIToolBarPreviewWindow == null))
                {
                    this.mUIToolBarPreviewWindow = new UIToolBarPreviewWindow(this);
                }
                return this.mUIToolBarPreviewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIToolBarPreviewWindow mUIToolBarPreviewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIToolBarPreviewWindow : WinWindow
    {
        
        public UIToolBarPreviewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "toolBarPreview";
            this.WindowTitles.Add("SmartView Production Quality Advisor");
            #endregion
        }
        
        #region Properties
        public WinButton UIWizardButton
        {
            get
            {
                if ((this.mUIWizardButton == null))
                {
                    this.mUIWizardButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIWizardButton.SearchProperties[WinButton.PropertyNames.Name] = "Wizard";
                    this.mUIWizardButton.WindowTitles.Add("SmartView Production Quality Advisor");
                    #endregion
                }
                return this.mUIWizardButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIWizardButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILaneSummaryWindow1 : WinWindow
    {
        
        public UILaneSummaryWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Lane Summary";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public UITabWindow UITabWindow
        {
            get
            {
                if ((this.mUITabWindow == null))
                {
                    this.mUITabWindow = new UITabWindow(this);
                }
                return this.mUITabWindow;
            }
        }
        
        public UIComboPageWindow UIComboPageWindow
        {
            get
            {
                if ((this.mUIComboPageWindow == null))
                {
                    this.mUIComboPageWindow = new UIComboPageWindow(this);
                }
                return this.mUIComboPageWindow;
            }
        }
        
        public UIHighlightrowsWindow UIHighlightrowsWindow
        {
            get
            {
                if ((this.mUIHighlightrowsWindow == null))
                {
                    this.mUIHighlightrowsWindow = new UIHighlightrowsWindow(this);
                }
                return this.mUIHighlightrowsWindow;
            }
        }
        
        public UIComboOrientationWindow UIComboOrientationWindow
        {
            get
            {
                if ((this.mUIComboOrientationWindow == null))
                {
                    this.mUIComboOrientationWindow = new UIComboOrientationWindow(this);
                }
                return this.mUIComboOrientationWindow;
            }
        }
        
        public UIDisplaytotalsWindow UIDisplaytotalsWindow
        {
            get
            {
                if ((this.mUIDisplaytotalsWindow == null))
                {
                    this.mUIDisplaytotalsWindow = new UIDisplaytotalsWindow(this);
                }
                return this.mUIDisplaytotalsWindow;
            }
        }
        
        public UIShowzerovaluesWindow UIShowzerovaluesWindow
        {
            get
            {
                if ((this.mUIShowzerovaluesWindow == null))
                {
                    this.mUIShowzerovaluesWindow = new UIShowzerovaluesWindow(this);
                }
                return this.mUIShowzerovaluesWindow;
            }
        }
        
        public UIFliprowsandcolumnsWindow UIFliprowsandcolumnsWindow
        {
            get
            {
                if ((this.mUIFliprowsandcolumnsWindow == null))
                {
                    this.mUIFliprowsandcolumnsWindow = new UIFliprowsandcolumnsWindow(this);
                }
                return this.mUIFliprowsandcolumnsWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITabWindow mUITabWindow;
        
        private UIComboPageWindow mUIComboPageWindow;
        
        private UIHighlightrowsWindow mUIHighlightrowsWindow;
        
        private UIComboOrientationWindow mUIComboOrientationWindow;
        
        private UIDisplaytotalsWindow mUIDisplaytotalsWindow;
        
        private UIShowzerovaluesWindow mUIShowzerovaluesWindow;
        
        private UIFliprowsandcolumnsWindow mUIFliprowsandcolumnsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITabWindow : WinWindow
    {
        
        public UITabWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tab";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinTabPage UISectionFormattingTabPage
        {
            get
            {
                if ((this.mUISectionFormattingTabPage == null))
                {
                    this.mUISectionFormattingTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUISectionFormattingTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Section Formatting";
                    this.mUISectionFormattingTabPage.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUISectionFormattingTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUISectionFormattingTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIComboPageWindow : WinWindow
    {
        
        public UIComboPageWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboPage";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIComboPageComboBox
        {
            get
            {
                if ((this.mUIComboPageComboBox == null))
                {
                    this.mUIComboPageComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIComboPageComboBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIComboPageComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIComboPageComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIHighlightrowsWindow : WinWindow
    {
        
        public UIHighlightrowsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkBox";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIHighlightrowsCheckBox
        {
            get
            {
                if ((this.mUIHighlightrowsCheckBox == null))
                {
                    this.mUIHighlightrowsCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIHighlightrowsCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Highlight rows";
                    this.mUIHighlightrowsCheckBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIHighlightrowsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIHighlightrowsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIComboOrientationWindow : WinWindow
    {
        
        public UIComboOrientationWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboOrientation";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIColumnheaderrotationComboBox
        {
            get
            {
                if ((this.mUIColumnheaderrotationComboBox == null))
                {
                    this.mUIColumnheaderrotationComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIColumnheaderrotationComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Column header rotation:";
                    this.mUIColumnheaderrotationComboBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIColumnheaderrotationComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIColumnheaderrotationComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDisplaytotalsWindow : WinWindow
    {
        
        public UIDisplaytotalsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkTotals";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIDisplaytotalsCheckBox
        {
            get
            {
                if ((this.mUIDisplaytotalsCheckBox == null))
                {
                    this.mUIDisplaytotalsCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIDisplaytotalsCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Display totals";
                    this.mUIDisplaytotalsCheckBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIDisplaytotalsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIDisplaytotalsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIShowzerovaluesWindow : WinWindow
    {
        
        public UIShowzerovaluesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkZeros";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIShowzerovaluesCheckBox
        {
            get
            {
                if ((this.mUIShowzerovaluesCheckBox == null))
                {
                    this.mUIShowzerovaluesCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIShowzerovaluesCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show zero values";
                    this.mUIShowzerovaluesCheckBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIShowzerovaluesCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIShowzerovaluesCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFliprowsandcolumnsWindow : WinWindow
    {
        
        public UIFliprowsandcolumnsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "checkFlip";
            this.WindowTitles.Add("Lane Summary");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIFliprowsandcolumnsCheckBox
        {
            get
            {
                if ((this.mUIFliprowsandcolumnsCheckBox == null))
                {
                    this.mUIFliprowsandcolumnsCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIFliprowsandcolumnsCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Flip rows and columns";
                    this.mUIFliprowsandcolumnsCheckBox.WindowTitles.Add("Lane Summary");
                    #endregion
                }
                return this.mUIFliprowsandcolumnsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIFliprowsandcolumnsCheckBox;
        #endregion
    }
}
