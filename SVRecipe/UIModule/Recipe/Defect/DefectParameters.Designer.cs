// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SVRecipe.UIModule.Recipe.Defect.DefectParametersClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class DefectParameters
    {
        
        #region Properties
        public UISmartViewRecipeManagWindow UISmartViewRecipeManagWindow
        {
            get
            {
                if ((this.mUISmartViewRecipeManagWindow == null))
                {
                    this.mUISmartViewRecipeManagWindow = new UISmartViewRecipeManagWindow();
                }
                return this.mUISmartViewRecipeManagWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIExportDefectParameteWindow UIExportDefectParameteWindow
        {
            get
            {
                if ((this.mUIExportDefectParameteWindow == null))
                {
                    this.mUIExportDefectParameteWindow = new UIExportDefectParameteWindow();
                }
                return this.mUIExportDefectParameteWindow;
            }
        }
        
        public UIImportDefectParameteWindow UIImportDefectParameteWindow
        {
            get
            {
                if ((this.mUIImportDefectParameteWindow == null))
                {
                    this.mUIImportDefectParameteWindow = new UIImportDefectParameteWindow();
                }
                return this.mUIImportDefectParameteWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISmartViewRecipeManagWindow mUISmartViewRecipeManagWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIExportDefectParameteWindow mUIExportDefectParameteWindow;
        
        private UIImportDefectParameteWindow mUIImportDefectParameteWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewRecipeManagWindow : WinWindow
    {
        
        public UISmartViewRecipeManagWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView Recipe Manager - test";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6MDIForm";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIDefectParametersStatWindow UIDefectParametersStatWindow
        {
            get
            {
                if ((this.mUIDefectParametersStatWindow == null))
                {
                    this.mUIDefectParametersStatWindow = new UIDefectParametersStatWindow(this);
                }
                return this.mUIDefectParametersStatWindow;
            }
        }
        
        public UIDefectParametersStatWindow1 UIDefectParametersStatWindow1
        {
            get
            {
                if ((this.mUIDefectParametersStatWindow1 == null))
                {
                    this.mUIDefectParametersStatWindow1 = new UIDefectParametersStatWindow1(this);
                }
                return this.mUIDefectParametersStatWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIDefectParametersStatWindow mUIDefectParametersStatWindow;
        
        private UIDefectParametersStatWindow1 mUIDefectParametersStatWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TreeViewWndClass";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UIItemTree UIItemTree
        {
            get
            {
                if ((this.mUIItemTree == null))
                {
                    this.mUIItemTree = new UIItemTree(this);
                }
                return this.mUIItemTree;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTree mUIItemTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemTree : WinTree
    {
        
        public UIItemTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UILineTreeItem UILineTreeItem
        {
            get
            {
                if ((this.mUILineTreeItem == null))
                {
                    this.mUILineTreeItem = new UILineTreeItem(this);
                }
                return this.mUILineTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UILineTreeItem mUILineTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILineTreeItem : WinTreeItem
    {
        
        public UILineTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Line";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UIStationTreeItem UIStationTreeItem
        {
            get
            {
                if ((this.mUIStationTreeItem == null))
                {
                    this.mUIStationTreeItem = new UIStationTreeItem(this);
                }
                return this.mUIStationTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIStationTreeItem mUIStationTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIStationTreeItem : WinTreeItem
    {
        
        public UIStationTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Station";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIView1TreeItem
        {
            get
            {
                if ((this.mUIView1TreeItem == null))
                {
                    this.mUIView1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIView1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "View 1";
                    this.mUIView1TreeItem.SearchProperties["Value"] = "2";
                    this.mUIView1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIView1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIView1TreeItem.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIView1TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIView1TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDefectParametersStatWindow : WinWindow
    {
        
        public UIDefectParametersStatWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32768";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UIItem00Window UIItem00Window
        {
            get
            {
                if ((this.mUIItem00Window == null))
                {
                    this.mUIItem00Window = new UIItem00Window(this);
                }
                return this.mUIItem00Window;
            }
        }
        
        public UIItem00Window1 UIItem00Window1
        {
            get
            {
                if ((this.mUIItem00Window1 == null))
                {
                    this.mUIItem00Window1 = new UIItem00Window1(this);
                }
                return this.mUIItem00Window1;
            }
        }
        
        public UIEnableextendedconnecWindow UIEnableextendedconnecWindow
        {
            get
            {
                if ((this.mUIEnableextendedconnecWindow == null))
                {
                    this.mUIEnableextendedconnecWindow = new UIEnableextendedconnecWindow(this);
                }
                return this.mUIEnableextendedconnecWindow;
            }
        }
        
        public UIItem0Window UIItem0Window
        {
            get
            {
                if ((this.mUIItem0Window == null))
                {
                    this.mUIItem0Window = new UIItem0Window(this);
                }
                return this.mUIItem0Window;
            }
        }
        
        public UIItem0Window1 UIItem0Window1
        {
            get
            {
                if ((this.mUIItem0Window1 == null))
                {
                    this.mUIItem0Window1 = new UIItem0Window1(this);
                }
                return this.mUIItem0Window1;
            }
        }
        
        public UIEnablegrayscalefilteWindow UIEnablegrayscalefilteWindow
        {
            get
            {
                if ((this.mUIEnablegrayscalefilteWindow == null))
                {
                    this.mUIEnablegrayscalefilteWindow = new UIEnablegrayscalefilteWindow(this);
                }
                return this.mUIEnablegrayscalefilteWindow;
            }
        }
        
        public UIItem00Window2 UIItem00Window2
        {
            get
            {
                if ((this.mUIItem00Window2 == null))
                {
                    this.mUIItem00Window2 = new UIItem00Window2(this);
                }
                return this.mUIItem00Window2;
            }
        }
        
        public UIBytimeWindow UIBytimeWindow
        {
            get
            {
                if ((this.mUIBytimeWindow == null))
                {
                    this.mUIBytimeWindow = new UIBytimeWindow(this);
                }
                return this.mUIBytimeWindow;
            }
        }
        
        public UIBydistanceWindow UIBydistanceWindow
        {
            get
            {
                if ((this.mUIBydistanceWindow == null))
                {
                    this.mUIBydistanceWindow = new UIBydistanceWindow(this);
                }
                return this.mUIBydistanceWindow;
            }
        }
        
        public UIItem00Window3 UIItem00Window3
        {
            get
            {
                if ((this.mUIItem00Window3 == null))
                {
                    this.mUIItem00Window3 = new UIItem00Window3(this);
                }
                return this.mUIItem00Window3;
            }
        }
        
        public UIThresholdtypeWindow UIThresholdtypeWindow
        {
            get
            {
                if ((this.mUIThresholdtypeWindow == null))
                {
                    this.mUIThresholdtypeWindow = new UIThresholdtypeWindow(this);
                }
                return this.mUIThresholdtypeWindow;
            }
        }
        
        public UIGraylevelWindow UIGraylevelWindow
        {
            get
            {
                if ((this.mUIGraylevelWindow == null))
                {
                    this.mUIGraylevelWindow = new UIGraylevelWindow(this);
                }
                return this.mUIGraylevelWindow;
            }
        }
        
        public UIExportWindow UIExportWindow
        {
            get
            {
                if ((this.mUIExportWindow == null))
                {
                    this.mUIExportWindow = new UIExportWindow(this);
                }
                return this.mUIExportWindow;
            }
        }
        
        public UIImportWindow UIImportWindow
        {
            get
            {
                if ((this.mUIImportWindow == null))
                {
                    this.mUIImportWindow = new UIImportWindow(this);
                }
                return this.mUIImportWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        
        public UIConnectivitymergedisGroup UIConnectivitymergedisGroup
        {
            get
            {
                if ((this.mUIConnectivitymergedisGroup == null))
                {
                    this.mUIConnectivitymergedisGroup = new UIConnectivitymergedisGroup(this);
                }
                return this.mUIConnectivitymergedisGroup;
            }
        }
        
        public UIItem0Window2 UIItem0Window2
        {
            get
            {
                if ((this.mUIItem0Window2 == null))
                {
                    this.mUIItem0Window2 = new UIItem0Window2(this);
                }
                return this.mUIItem0Window2;
            }
        }
        
        public UIItem0Window11 UIItem0Window11
        {
            get
            {
                if ((this.mUIItem0Window11 == null))
                {
                    this.mUIItem0Window11 = new UIItem0Window11(this);
                }
                return this.mUIItem0Window11;
            }
        }
        #endregion
        
        #region Fields
        private UIItem00Window mUIItem00Window;
        
        private UIItem00Window1 mUIItem00Window1;
        
        private UIEnableextendedconnecWindow mUIEnableextendedconnecWindow;
        
        private UIItem0Window mUIItem0Window;
        
        private UIItem0Window1 mUIItem0Window1;
        
        private UIEnablegrayscalefilteWindow mUIEnablegrayscalefilteWindow;
        
        private UIItem00Window2 mUIItem00Window2;
        
        private UIBytimeWindow mUIBytimeWindow;
        
        private UIBydistanceWindow mUIBydistanceWindow;
        
        private UIItem00Window3 mUIItem00Window3;
        
        private UIThresholdtypeWindow mUIThresholdtypeWindow;
        
        private UIGraylevelWindow mUIGraylevelWindow;
        
        private UIExportWindow mUIExportWindow;
        
        private UIImportWindow mUIImportWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UIConnectivitymergedisGroup mUIConnectivitymergedisGroup;
        
        private UIItem0Window2 mUIItem0Window2;
        
        private UIItem0Window11 mUIItem0Window11;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem00Window : WinWindow
    {
        
        public UIItem00Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "38";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem00Window1 : WinWindow
    {
        
        public UIItem00Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "37";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEnableextendedconnecWindow : WinWindow
    {
        
        public UIEnableextendedconnecWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "16";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIEnableextendedconnecCheckBox
        {
            get
            {
                if ((this.mUIEnableextendedconnecCheckBox == null))
                {
                    this.mUIEnableextendedconnecCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIEnableextendedconnecCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Enable extended connectivity for designated classes";
                    this.mUIEnableextendedconnecCheckBox.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIEnableextendedconnecCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIEnableextendedconnecCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem0Window : WinWindow
    {
        
        public UIItem0Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "18";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem0Window1 : WinWindow
    {
        
        public UIItem0Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "19";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEnablegrayscalefilteWindow : WinWindow
    {
        
        public UIEnablegrayscalefilteWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIEnablegrayscalefilteCheckBox
        {
            get
            {
                if ((this.mUIEnablegrayscalefilteCheckBox == null))
                {
                    this.mUIEnablegrayscalefilteCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIEnablegrayscalefilteCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Enable grayscale filtering for ongoing defects";
                    this.mUIEnablegrayscalefilteCheckBox.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIEnablegrayscalefilteCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIEnablegrayscalefilteCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem00Window2 : WinWindow
    {
        
        public UIItem00Window2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "9";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBytimeWindow : WinWindow
    {
        
        public UIBytimeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "26";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIBytimeRadioButton
        {
            get
            {
                if ((this.mUIBytimeRadioButton == null))
                {
                    this.mUIBytimeRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIBytimeRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "By time";
                    this.mUIBytimeRadioButton.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIBytimeRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIBytimeRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBydistanceWindow : WinWindow
    {
        
        public UIBydistanceWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "28";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIBydistanceRadioButton
        {
            get
            {
                if ((this.mUIBydistanceRadioButton == null))
                {
                    this.mUIBydistanceRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIBydistanceRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "By distance";
                    this.mUIBydistanceRadioButton.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIBydistanceRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIBydistanceRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem00Window3 : WinWindow
    {
        
        public UIItem00Window3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "24";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIThresholdtypeWindow : WinWindow
    {
        
        public UIThresholdtypeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "22";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIThresholdtypeRadioButton
        {
            get
            {
                if ((this.mUIThresholdtypeRadioButton == null))
                {
                    this.mUIThresholdtypeRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIThresholdtypeRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Threshold type";
                    this.mUIThresholdtypeRadioButton.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIThresholdtypeRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIThresholdtypeRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIGraylevelWindow : WinWindow
    {
        
        public UIGraylevelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "21";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIGraylevelRadioButton
        {
            get
            {
                if ((this.mUIGraylevelRadioButton == null))
                {
                    this.mUIGraylevelRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIGraylevelRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Gray level";
                    this.mUIGraylevelRadioButton.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIGraylevelRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIGraylevelRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIExportWindow : WinWindow
    {
        
        public UIExportWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "31";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinButton UIExportButton
        {
            get
            {
                if ((this.mUIExportButton == null))
                {
                    this.mUIExportButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIExportButton.SearchProperties[WinButton.PropertyNames.Name] = "Export...";
                    this.mUIExportButton.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIExportButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIExportButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIImportWindow : WinWindow
    {
        
        public UIImportWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinButton UIImportButton
        {
            get
            {
                if ((this.mUIImportButton == null))
                {
                    this.mUIImportButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIImportButton.SearchProperties[WinButton.PropertyNames.Name] = "Import...";
                    this.mUIImportButton.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIImportButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIImportButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "33";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIConnectivitymergedisGroup : WinGroup
    {
        
        public UIConnectivitymergedisGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Connectivity merge distance";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItem00Window
        {
            get
            {
                if ((this.mUIItem00Window == null))
                {
                    this.mUIItem00Window = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItem00Window.SearchProperties[WinWindow.PropertyNames.Name] = "0.0";
                    this.mUIItem00Window.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6TextBox";
                    this.mUIItem00Window.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIItem00Window;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItem00Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem0Window2 : WinWindow
    {
        
        public UIItem0Window2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "29";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem0Window11 : WinWindow
    {
        
        public UIItem0Window11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "27";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDefectParametersStatWindow1 : WinWindow
    {
        
        public UIDefectParametersStatWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "32769";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public UIConnectivitymergedisWindow UIConnectivitymergedisWindow
        {
            get
            {
                if ((this.mUIConnectivitymergedisWindow == null))
                {
                    this.mUIConnectivitymergedisWindow = new UIConnectivitymergedisWindow(this);
                }
                return this.mUIConnectivitymergedisWindow;
            }
        }
        
        public UIExtendedconnectivityWindow UIExtendedconnectivityWindow
        {
            get
            {
                if ((this.mUIExtendedconnectivityWindow == null))
                {
                    this.mUIExtendedconnectivityWindow = new UIExtendedconnectivityWindow(this);
                }
                return this.mUIExtendedconnectivityWindow;
            }
        }
        
        public UIDefectParametersStatClient UIDefectParametersStatClient
        {
            get
            {
                if ((this.mUIDefectParametersStatClient == null))
                {
                    this.mUIDefectParametersStatClient = new UIDefectParametersStatClient(this);
                }
                return this.mUIDefectParametersStatClient;
            }
        }
        
        public UIDefectnotificationsuWindow UIDefectnotificationsuWindow
        {
            get
            {
                if ((this.mUIDefectnotificationsuWindow == null))
                {
                    this.mUIDefectnotificationsuWindow = new UIDefectnotificationsuWindow(this);
                }
                return this.mUIDefectnotificationsuWindow;
            }
        }
        
        public UIBrightdarkpixelsWindow UIBrightdarkpixelsWindow
        {
            get
            {
                if ((this.mUIBrightdarkpixelsWindow == null))
                {
                    this.mUIBrightdarkpixelsWindow = new UIBrightdarkpixelsWindow(this);
                }
                return this.mUIBrightdarkpixelsWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIConnectivitymergedisWindow mUIConnectivitymergedisWindow;
        
        private UIExtendedconnectivityWindow mUIExtendedconnectivityWindow;
        
        private UIDefectParametersStatClient mUIDefectParametersStatClient;
        
        private UIDefectnotificationsuWindow mUIDefectnotificationsuWindow;
        
        private UIBrightdarkpixelsWindow mUIBrightdarkpixelsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIConnectivitymergedisWindow : WinWindow
    {
        
        public UIConnectivitymergedisWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "36";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinGroup UIConnectivitymergedisGroup
        {
            get
            {
                if ((this.mUIConnectivitymergedisGroup == null))
                {
                    this.mUIConnectivitymergedisGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIConnectivitymergedisGroup.SearchProperties[WinControl.PropertyNames.Name] = "Connectivity merge distance";
                    this.mUIConnectivitymergedisGroup.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIConnectivitymergedisGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIConnectivitymergedisGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIExtendedconnectivityWindow : WinWindow
    {
        
        public UIExtendedconnectivityWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "15";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinGroup UIExtendedconnectivityGroup
        {
            get
            {
                if ((this.mUIExtendedconnectivityGroup == null))
                {
                    this.mUIExtendedconnectivityGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIExtendedconnectivityGroup.SearchProperties[WinControl.PropertyNames.Name] = "Extended connectivity";
                    this.mUIExtendedconnectivityGroup.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIExtendedconnectivityGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIExtendedconnectivityGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDefectParametersStatClient : WinClient
    {
        
        public UIDefectParametersStatClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Defect Parameters: Station, View 1";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinWindow UIOngoingdefectsWindow
        {
            get
            {
                if ((this.mUIOngoingdefectsWindow == null))
                {
                    this.mUIOngoingdefectsWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIOngoingdefectsWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Ongoing defects";
                    this.mUIOngoingdefectsWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6Frame";
                    this.mUIOngoingdefectsWindow.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIOngoingdefectsWindow;
            }
        }
        
        public WinWindow UIFiltereddefectsWindow
        {
            get
            {
                if ((this.mUIFiltereddefectsWindow == null))
                {
                    this.mUIFiltereddefectsWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIFiltereddefectsWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Filtered defects";
                    this.mUIFiltereddefectsWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6Frame";
                    this.mUIFiltereddefectsWindow.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIFiltereddefectsWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIOngoingdefectsWindow;
        
        private WinWindow mUIFiltereddefectsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDefectnotificationsuWindow : WinWindow
    {
        
        public UIDefectnotificationsuWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "23";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinGroup UIDefectnotificationsuGroup
        {
            get
            {
                if ((this.mUIDefectnotificationsuGroup == null))
                {
                    this.mUIDefectnotificationsuGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIDefectnotificationsuGroup.SearchProperties[WinControl.PropertyNames.Name] = "Defect notification suppression";
                    this.mUIDefectnotificationsuGroup.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIDefectnotificationsuGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIDefectnotificationsuGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIBrightdarkpixelsWindow : WinWindow
    {
        
        public UIBrightdarkpixelsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "20";
            this.WindowTitles.Add("SmartView Recipe Manager - test");
            #endregion
        }
        
        #region Properties
        public WinGroup UIBrightdarkpixelsGroup
        {
            get
            {
                if ((this.mUIBrightdarkpixelsGroup == null))
                {
                    this.mUIBrightdarkpixelsGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIBrightdarkpixelsGroup.SearchProperties[WinControl.PropertyNames.Name] = "Bright/dark pixels";
                    this.mUIBrightdarkpixelsGroup.WindowTitles.Add("SmartView Recipe Manager - test");
                    #endregion
                }
                return this.mUIBrightdarkpixelsGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIBrightdarkpixelsGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIDefectParametersMenuItem
        {
            get
            {
                if ((this.mUIDefectParametersMenuItem == null))
                {
                    this.mUIDefectParametersMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIDefectParametersMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Defect Parameters...";
                    #endregion
                }
                return this.mUIDefectParametersMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIDefectParametersMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIExportDefectParameteWindow : WinWindow
    {
        
        public UIExportDefectParameteWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Export Defect Parameters";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Export Defect Parameters");
            #endregion
        }
        
        #region Properties
        public UIDetailsPanePane UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsPanePane mUIDetailsPanePane;
        
        private UISaveWindow mUISaveWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDetailsPanePane : WinPane
    {
        
        public UIDetailsPanePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Export Defect Parameters");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Export Defect Parameters");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Export Defect Parameters");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Export Defect Parameters");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIImportDefectParameteWindow : WinWindow
    {
        
        public UIImportDefectParameteWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Import Defect Parameters";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Import Defect Parameters");
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOpenWindow UIOpenWindow
        {
            get
            {
                if ((this.mUIOpenWindow == null))
                {
                    this.mUIOpenWindow = new UIOpenWindow(this);
                }
                return this.mUIOpenWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow;
        
        private UIOpenWindow mUIOpenWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Import Defect Parameters");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Import Defect Parameters");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOpenWindow : WinWindow
    {
        
        public UIOpenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Import Defect Parameters");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Import Defect Parameters");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Import Defect Parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilenameEdit
        {
            get
            {
                if ((this.mUIFilenameEdit == null))
                {
                    this.mUIFilenameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFilenameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mUIFilenameEdit.WindowTitles.Add("Import Defect Parameters");
                    #endregion
                }
                return this.mUIFilenameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilenameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Import Defect Parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilenameEdit
        {
            get
            {
                if ((this.mUIFilenameEdit == null))
                {
                    this.mUIFilenameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFilenameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mUIFilenameEdit.WindowTitles.Add("Import Defect Parameters");
                    #endregion
                }
                return this.mUIFilenameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilenameEdit;
        #endregion
    }
}
