// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SVRecipe.UIModule.Recipe.Aliases.AliasesClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class Aliases
    {
        
        #region Properties
        public UIRecipeAliasestestWindow UIRecipeAliasestestWindow
        {
            get
            {
                if ((this.mUIRecipeAliasestestWindow == null))
                {
                    this.mUIRecipeAliasestestWindow = new UIRecipeAliasestestWindow();
                }
                return this.mUIRecipeAliasestestWindow;
            }
        }
        
        public UIConfirmDeleteWindow UIConfirmDeleteWindow
        {
            get
            {
                if ((this.mUIConfirmDeleteWindow == null))
                {
                    this.mUIConfirmDeleteWindow = new UIConfirmDeleteWindow();
                }
                return this.mUIConfirmDeleteWindow;
            }
        }
        
        public UISmartViewWindow UISmartViewWindow
        {
            get
            {
                if ((this.mUISmartViewWindow == null))
                {
                    this.mUISmartViewWindow = new UISmartViewWindow();
                }
                return this.mUISmartViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIRecipeAliasestestWindow mUIRecipeAliasestestWindow;
        
        private UIConfirmDeleteWindow mUIConfirmDeleteWindow;
        
        private UISmartViewWindow mUISmartViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRecipeAliasestestWindow : WinWindow
    {
        
        public UIRecipeAliasestestWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Recipe Aliases - test";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ThunderRT6FormDC";
            this.WindowTitles.Add("Recipe Aliases - test");
            #endregion
        }
        
        #region Properties
        public UIAddWindow UIAddWindow
        {
            get
            {
                if ((this.mUIAddWindow == null))
                {
                    this.mUIAddWindow = new UIAddWindow(this);
                }
                return this.mUIAddWindow;
            }
        }
        
        public UINewAliasWindow UINewAliasWindow
        {
            get
            {
                if ((this.mUINewAliasWindow == null))
                {
                    this.mUINewAliasWindow = new UINewAliasWindow(this);
                }
                return this.mUINewAliasWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIDeleteWindow UIDeleteWindow
        {
            get
            {
                if ((this.mUIDeleteWindow == null))
                {
                    this.mUIDeleteWindow = new UIDeleteWindow(this);
                }
                return this.mUIDeleteWindow;
            }
        }
        
        public UICloseWindow UICloseWindow
        {
            get
            {
                if ((this.mUICloseWindow == null))
                {
                    this.mUICloseWindow = new UICloseWindow(this);
                }
                return this.mUICloseWindow;
            }
        }
        
        public WinTitleBar UIRecipeAliasestestTitleBar
        {
            get
            {
                if ((this.mUIRecipeAliasestestTitleBar == null))
                {
                    this.mUIRecipeAliasestestTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIRecipeAliasestestTitleBar.WindowTitles.Add("Recipe Aliases - test");
                    #endregion
                }
                return this.mUIRecipeAliasestestTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIAddWindow mUIAddWindow;
        
        private UINewAliasWindow mUINewAliasWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIDeleteWindow mUIDeleteWindow;
        
        private UICloseWindow mUICloseWindow;
        
        private WinTitleBar mUIRecipeAliasestestTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAddWindow : WinWindow
    {
        
        public UIAddWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5";
            this.WindowTitles.Add("Recipe Aliases - test");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Recipe Aliases - test");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UINewAliasWindow : WinWindow
    {
        
        public UINewAliasWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "New Alias";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Edit";
            this.WindowTitles.Add("Recipe Aliases - test");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Recipe Aliases - test");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TreeViewWndClass";
            this.WindowTitles.Add("Recipe Aliases - test");
            #endregion
        }
        
        #region Properties
        public UIItemTree UIItemTree
        {
            get
            {
                if ((this.mUIItemTree == null))
                {
                    this.mUIItemTree = new UIItemTree(this);
                }
                return this.mUIItemTree;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTree mUIItemTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemTree : WinTree
    {
        
        public UIItemTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Recipe Aliases - test");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UITestAliasesTreeItem
        {
            get
            {
                if ((this.mUITestAliasesTreeItem == null))
                {
                    this.mUITestAliasesTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUITestAliasesTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "TestAliases";
                    this.mUITestAliasesTreeItem.SearchProperties["Value"] = "0";
                    this.mUITestAliasesTreeItem.WindowTitles.Add("Recipe Aliases - test");
                    #endregion
                }
                return this.mUITestAliasesTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUITestAliasesTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDeleteWindow : WinWindow
    {
        
        public UIDeleteWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "4";
            this.WindowTitles.Add("Recipe Aliases - test");
            #endregion
        }
        
        #region Properties
        public WinButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[WinButton.PropertyNames.Name] = "Delete";
                    this.mUIDeleteButton.WindowTitles.Add("Recipe Aliases - test");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICloseWindow : WinWindow
    {
        
        public UICloseWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "3";
            this.WindowTitles.Add("Recipe Aliases - test");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Recipe Aliases - test");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIConfirmDeleteWindow : WinWindow
    {
        
        public UIConfirmDeleteWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Confirm Delete";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Confirm Delete");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Confirm Delete");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Confirm Delete");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISmartViewWindow : WinWindow
    {
        
        public UISmartViewWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SmartView";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("SmartView");
            #endregion
        }
        
        #region Properties
        public UIDuplicatenameenteredWindow UIDuplicatenameenteredWindow
        {
            get
            {
                if ((this.mUIDuplicatenameenteredWindow == null))
                {
                    this.mUIDuplicatenameenteredWindow = new UIDuplicatenameenteredWindow(this);
                }
                return this.mUIDuplicatenameenteredWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDuplicatenameenteredWindow mUIDuplicatenameenteredWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDuplicatenameenteredWindow : WinWindow
    {
        
        public UIDuplicatenameenteredWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("SmartView");
            #endregion
        }
        
        #region Properties
        public WinText UIDuplicatenameenteredText
        {
            get
            {
                if ((this.mUIDuplicatenameenteredText == null))
                {
                    this.mUIDuplicatenameenteredText = new WinText(this);
                    #region Search Criteria
                    this.mUIDuplicatenameenteredText.SearchProperties[WinText.PropertyNames.Name] = "Duplicate name entered; please correct.";
                    this.mUIDuplicatenameenteredText.WindowTitles.Add("SmartView");
                    #endregion
                }
                return this.mUIDuplicatenameenteredText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIDuplicatenameenteredText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("SmartView");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("SmartView");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
